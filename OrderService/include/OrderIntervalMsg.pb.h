// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderIntervalMsg.proto

#ifndef PROTOBUF_OrderIntervalMsg_2eproto_INCLUDED
#define PROTOBUF_OrderIntervalMsg_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_OrderIntervalMsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsST_USER_LOGIN_INFOImpl();
void InitDefaultsST_USER_LOGIN_INFO();
void InitDefaultsST_SIG_IP_INFOImpl();
void InitDefaultsST_SIG_IP_INFO();
void InitDefaultsST_SYMBOL_INFOImpl();
void InitDefaultsST_SYMBOL_INFO();
void InitDefaultsST_USER_LOGIN_RESPImpl();
void InitDefaultsST_USER_LOGIN_RESP();
void InitDefaultsST_SUBMIT_ORDERImpl();
void InitDefaultsST_SUBMIT_ORDER();
void InitDefaultsST_SUBMIT_CAMCEL_ORDERImpl();
void InitDefaultsST_SUBMIT_CAMCEL_ORDER();
void InitDefaultsST_SUBMIT_ORDER_RESPImpl();
void InitDefaultsST_SUBMIT_ORDER_RESP();
void InitDefaultsST_TRANS_ORDER_INFOImpl();
void InitDefaultsST_TRANS_ORDER_INFO();
void InitDefaultsST_REP_TRANS_ORDER_REQUESTImpl();
void InitDefaultsST_REP_TRANS_ORDER_REQUEST();
void InitDefaultsST_QUERY_ORDER_INFOImpl();
void InitDefaultsST_QUERY_ORDER_INFO();
void InitDefaultsST_QUERY_ORDER_RESImpl();
void InitDefaultsST_QUERY_ORDER_RES();
void InitDefaultsST_MART_QUOTATIONImpl();
void InitDefaultsST_MART_QUOTATION();
void InitDefaultsST_SIG_ORDER_INFOImpl();
void InitDefaultsST_SIG_ORDER_INFO();
void InitDefaultsST_MARKET_ORDERBOOKImpl();
void InitDefaultsST_MARKET_ORDERBOOK();
void InitDefaultsST_MAINTAIN_LOGImpl();
void InitDefaultsST_MAINTAIN_LOG();
void InitDefaultsIntervalMsgHeaderImpl();
void InitDefaultsIntervalMsgHeader();
inline void InitDefaults() {
  InitDefaultsST_USER_LOGIN_INFO();
  InitDefaultsST_SIG_IP_INFO();
  InitDefaultsST_SYMBOL_INFO();
  InitDefaultsST_USER_LOGIN_RESP();
  InitDefaultsST_SUBMIT_ORDER();
  InitDefaultsST_SUBMIT_CAMCEL_ORDER();
  InitDefaultsST_SUBMIT_ORDER_RESP();
  InitDefaultsST_TRANS_ORDER_INFO();
  InitDefaultsST_REP_TRANS_ORDER_REQUEST();
  InitDefaultsST_QUERY_ORDER_INFO();
  InitDefaultsST_QUERY_ORDER_RES();
  InitDefaultsST_MART_QUOTATION();
  InitDefaultsST_SIG_ORDER_INFO();
  InitDefaultsST_MARKET_ORDERBOOK();
  InitDefaultsST_MAINTAIN_LOG();
  InitDefaultsIntervalMsgHeader();
}
}  // namespace protobuf_OrderIntervalMsg_2eproto
namespace MEProInterface {
class IntervalMsgHeader;
class IntervalMsgHeaderDefaultTypeInternal;
extern IntervalMsgHeaderDefaultTypeInternal _IntervalMsgHeader_default_instance_;
class ST_MAINTAIN_LOG;
class ST_MAINTAIN_LOGDefaultTypeInternal;
extern ST_MAINTAIN_LOGDefaultTypeInternal _ST_MAINTAIN_LOG_default_instance_;
class ST_MARKET_ORDERBOOK;
class ST_MARKET_ORDERBOOKDefaultTypeInternal;
extern ST_MARKET_ORDERBOOKDefaultTypeInternal _ST_MARKET_ORDERBOOK_default_instance_;
class ST_MART_QUOTATION;
class ST_MART_QUOTATIONDefaultTypeInternal;
extern ST_MART_QUOTATIONDefaultTypeInternal _ST_MART_QUOTATION_default_instance_;
class ST_QUERY_ORDER_INFO;
class ST_QUERY_ORDER_INFODefaultTypeInternal;
extern ST_QUERY_ORDER_INFODefaultTypeInternal _ST_QUERY_ORDER_INFO_default_instance_;
class ST_QUERY_ORDER_RES;
class ST_QUERY_ORDER_RESDefaultTypeInternal;
extern ST_QUERY_ORDER_RESDefaultTypeInternal _ST_QUERY_ORDER_RES_default_instance_;
class ST_REP_TRANS_ORDER_REQUEST;
class ST_REP_TRANS_ORDER_REQUESTDefaultTypeInternal;
extern ST_REP_TRANS_ORDER_REQUESTDefaultTypeInternal _ST_REP_TRANS_ORDER_REQUEST_default_instance_;
class ST_SIG_IP_INFO;
class ST_SIG_IP_INFODefaultTypeInternal;
extern ST_SIG_IP_INFODefaultTypeInternal _ST_SIG_IP_INFO_default_instance_;
class ST_SIG_ORDER_INFO;
class ST_SIG_ORDER_INFODefaultTypeInternal;
extern ST_SIG_ORDER_INFODefaultTypeInternal _ST_SIG_ORDER_INFO_default_instance_;
class ST_SUBMIT_CAMCEL_ORDER;
class ST_SUBMIT_CAMCEL_ORDERDefaultTypeInternal;
extern ST_SUBMIT_CAMCEL_ORDERDefaultTypeInternal _ST_SUBMIT_CAMCEL_ORDER_default_instance_;
class ST_SUBMIT_ORDER;
class ST_SUBMIT_ORDERDefaultTypeInternal;
extern ST_SUBMIT_ORDERDefaultTypeInternal _ST_SUBMIT_ORDER_default_instance_;
class ST_SUBMIT_ORDER_RESP;
class ST_SUBMIT_ORDER_RESPDefaultTypeInternal;
extern ST_SUBMIT_ORDER_RESPDefaultTypeInternal _ST_SUBMIT_ORDER_RESP_default_instance_;
class ST_SYMBOL_INFO;
class ST_SYMBOL_INFODefaultTypeInternal;
extern ST_SYMBOL_INFODefaultTypeInternal _ST_SYMBOL_INFO_default_instance_;
class ST_TRANS_ORDER_INFO;
class ST_TRANS_ORDER_INFODefaultTypeInternal;
extern ST_TRANS_ORDER_INFODefaultTypeInternal _ST_TRANS_ORDER_INFO_default_instance_;
class ST_USER_LOGIN_INFO;
class ST_USER_LOGIN_INFODefaultTypeInternal;
extern ST_USER_LOGIN_INFODefaultTypeInternal _ST_USER_LOGIN_INFO_default_instance_;
class ST_USER_LOGIN_RESP;
class ST_USER_LOGIN_RESPDefaultTypeInternal;
extern ST_USER_LOGIN_RESPDefaultTypeInternal _ST_USER_LOGIN_RESP_default_instance_;
}  // namespace MEProInterface
namespace google {
namespace protobuf {
template<> ::MEProInterface::IntervalMsgHeader* Arena::Create< ::MEProInterface::IntervalMsgHeader>(Arena*);
template<> ::MEProInterface::ST_MAINTAIN_LOG* Arena::Create< ::MEProInterface::ST_MAINTAIN_LOG>(Arena*);
template<> ::MEProInterface::ST_MARKET_ORDERBOOK* Arena::Create< ::MEProInterface::ST_MARKET_ORDERBOOK>(Arena*);
template<> ::MEProInterface::ST_MART_QUOTATION* Arena::Create< ::MEProInterface::ST_MART_QUOTATION>(Arena*);
template<> ::MEProInterface::ST_QUERY_ORDER_INFO* Arena::Create< ::MEProInterface::ST_QUERY_ORDER_INFO>(Arena*);
template<> ::MEProInterface::ST_QUERY_ORDER_RES* Arena::Create< ::MEProInterface::ST_QUERY_ORDER_RES>(Arena*);
template<> ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* Arena::Create< ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST>(Arena*);
template<> ::MEProInterface::ST_SIG_IP_INFO* Arena::Create< ::MEProInterface::ST_SIG_IP_INFO>(Arena*);
template<> ::MEProInterface::ST_SIG_ORDER_INFO* Arena::Create< ::MEProInterface::ST_SIG_ORDER_INFO>(Arena*);
template<> ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* Arena::Create< ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER>(Arena*);
template<> ::MEProInterface::ST_SUBMIT_ORDER* Arena::Create< ::MEProInterface::ST_SUBMIT_ORDER>(Arena*);
template<> ::MEProInterface::ST_SUBMIT_ORDER_RESP* Arena::Create< ::MEProInterface::ST_SUBMIT_ORDER_RESP>(Arena*);
template<> ::MEProInterface::ST_SYMBOL_INFO* Arena::Create< ::MEProInterface::ST_SYMBOL_INFO>(Arena*);
template<> ::MEProInterface::ST_TRANS_ORDER_INFO* Arena::Create< ::MEProInterface::ST_TRANS_ORDER_INFO>(Arena*);
template<> ::MEProInterface::ST_USER_LOGIN_INFO* Arena::Create< ::MEProInterface::ST_USER_LOGIN_INFO>(Arena*);
template<> ::MEProInterface::ST_USER_LOGIN_RESP* Arena::Create< ::MEProInterface::ST_USER_LOGIN_RESP>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace MEProInterface {

// ===================================================================

class ST_USER_LOGIN_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_USER_LOGIN_INFO) */ {
 public:
  ST_USER_LOGIN_INFO();
  virtual ~ST_USER_LOGIN_INFO();

  ST_USER_LOGIN_INFO(const ST_USER_LOGIN_INFO& from);

  inline ST_USER_LOGIN_INFO& operator=(const ST_USER_LOGIN_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_USER_LOGIN_INFO(ST_USER_LOGIN_INFO&& from) noexcept
    : ST_USER_LOGIN_INFO() {
    *this = ::std::move(from);
  }

  inline ST_USER_LOGIN_INFO& operator=(ST_USER_LOGIN_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_USER_LOGIN_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_USER_LOGIN_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_USER_LOGIN_INFO*>(
               &_ST_USER_LOGIN_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ST_USER_LOGIN_INFO* other);
  friend void swap(ST_USER_LOGIN_INFO& a, ST_USER_LOGIN_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_USER_LOGIN_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_USER_LOGIN_INFO>(NULL);
  }

  ST_USER_LOGIN_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_USER_LOGIN_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_USER_LOGIN_INFO& from);
  void MergeFrom(const ST_USER_LOGIN_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_USER_LOGIN_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chUserName = 1;
  void clear_chusername();
  static const int kChUserNameFieldNumber = 1;
  const ::std::string& chusername() const;
  void set_chusername(const ::std::string& value);
  #if LANG_CXX11
  void set_chusername(::std::string&& value);
  #endif
  void set_chusername(const char* value);
  void set_chusername(const void* value, size_t size);
  ::std::string* mutable_chusername();
  ::std::string* release_chusername();
  void set_allocated_chusername(::std::string* chusername);

  // bytes chPasswordTxt = 2;
  void clear_chpasswordtxt();
  static const int kChPasswordTxtFieldNumber = 2;
  const ::std::string& chpasswordtxt() const;
  void set_chpasswordtxt(const ::std::string& value);
  #if LANG_CXX11
  void set_chpasswordtxt(::std::string&& value);
  #endif
  void set_chpasswordtxt(const char* value);
  void set_chpasswordtxt(const void* value, size_t size);
  ::std::string* mutable_chpasswordtxt();
  ::std::string* release_chpasswordtxt();
  void set_allocated_chpasswordtxt(::std::string* chpasswordtxt);

  // string chAddressIp = 3;
  void clear_chaddressip();
  static const int kChAddressIpFieldNumber = 3;
  const ::std::string& chaddressip() const;
  void set_chaddressip(const ::std::string& value);
  #if LANG_CXX11
  void set_chaddressip(::std::string&& value);
  #endif
  void set_chaddressip(const char* value);
  void set_chaddressip(const char* value, size_t size);
  ::std::string* mutable_chaddressip();
  ::std::string* release_chaddressip();
  void set_allocated_chaddressip(::std::string* chaddressip);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_USER_LOGIN_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chusername_;
  ::google::protobuf::internal::ArenaStringPtr chpasswordtxt_;
  ::google::protobuf::internal::ArenaStringPtr chaddressip_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_USER_LOGIN_INFOImpl();
};
// -------------------------------------------------------------------

class ST_SIG_IP_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SIG_IP_INFO) */ {
 public:
  ST_SIG_IP_INFO();
  virtual ~ST_SIG_IP_INFO();

  ST_SIG_IP_INFO(const ST_SIG_IP_INFO& from);

  inline ST_SIG_IP_INFO& operator=(const ST_SIG_IP_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SIG_IP_INFO(ST_SIG_IP_INFO&& from) noexcept
    : ST_SIG_IP_INFO() {
    *this = ::std::move(from);
  }

  inline ST_SIG_IP_INFO& operator=(ST_SIG_IP_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SIG_IP_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SIG_IP_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_SIG_IP_INFO*>(
               &_ST_SIG_IP_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ST_SIG_IP_INFO* other);
  friend void swap(ST_SIG_IP_INFO& a, ST_SIG_IP_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SIG_IP_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SIG_IP_INFO>(NULL);
  }

  ST_SIG_IP_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SIG_IP_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SIG_IP_INFO& from);
  void MergeFrom(const ST_SIG_IP_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SIG_IP_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ucIpAddress = 2;
  void clear_ucipaddress();
  static const int kUcIpAddressFieldNumber = 2;
  const ::std::string& ucipaddress() const;
  void set_ucipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_ucipaddress(::std::string&& value);
  #endif
  void set_ucipaddress(const char* value);
  void set_ucipaddress(const void* value, size_t size);
  ::std::string* mutable_ucipaddress();
  ::std::string* release_ucipaddress();
  void set_allocated_ucipaddress(::std::string* ucipaddress);

  // uint32 wIpType = 1;
  void clear_wiptype();
  static const int kWIpTypeFieldNumber = 1;
  ::google::protobuf::uint32 wiptype() const;
  void set_wiptype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SIG_IP_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ucipaddress_;
  ::google::protobuf::uint32 wiptype_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SIG_IP_INFOImpl();
};
// -------------------------------------------------------------------

class ST_SYMBOL_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SYMBOL_INFO) */ {
 public:
  ST_SYMBOL_INFO();
  virtual ~ST_SYMBOL_INFO();

  ST_SYMBOL_INFO(const ST_SYMBOL_INFO& from);

  inline ST_SYMBOL_INFO& operator=(const ST_SYMBOL_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SYMBOL_INFO(ST_SYMBOL_INFO&& from) noexcept
    : ST_SYMBOL_INFO() {
    *this = ::std::move(from);
  }

  inline ST_SYMBOL_INFO& operator=(ST_SYMBOL_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SYMBOL_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SYMBOL_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_SYMBOL_INFO*>(
               &_ST_SYMBOL_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ST_SYMBOL_INFO* other);
  friend void swap(ST_SYMBOL_INFO& a, ST_SYMBOL_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SYMBOL_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SYMBOL_INFO>(NULL);
  }

  ST_SYMBOL_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SYMBOL_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SYMBOL_INFO& from);
  void MergeFrom(const ST_SYMBOL_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SYMBOL_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes uiSymbolName = 2;
  void clear_uisymbolname();
  static const int kUiSymbolNameFieldNumber = 2;
  const ::std::string& uisymbolname() const;
  void set_uisymbolname(const ::std::string& value);
  #if LANG_CXX11
  void set_uisymbolname(::std::string&& value);
  #endif
  void set_uisymbolname(const char* value);
  void set_uisymbolname(const void* value, size_t size);
  ::std::string* mutable_uisymbolname();
  ::std::string* release_uisymbolname();
  void set_allocated_uisymbolname(::std::string* uisymbolname);

  // uint32 uiSymbolID = 1;
  void clear_uisymbolid();
  static const int kUiSymbolIDFieldNumber = 1;
  ::google::protobuf::uint32 uisymbolid() const;
  void set_uisymbolid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SYMBOL_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uisymbolname_;
  ::google::protobuf::uint32 uisymbolid_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SYMBOL_INFOImpl();
};
// -------------------------------------------------------------------

class ST_USER_LOGIN_RESP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_USER_LOGIN_RESP) */ {
 public:
  ST_USER_LOGIN_RESP();
  virtual ~ST_USER_LOGIN_RESP();

  ST_USER_LOGIN_RESP(const ST_USER_LOGIN_RESP& from);

  inline ST_USER_LOGIN_RESP& operator=(const ST_USER_LOGIN_RESP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_USER_LOGIN_RESP(ST_USER_LOGIN_RESP&& from) noexcept
    : ST_USER_LOGIN_RESP() {
    *this = ::std::move(from);
  }

  inline ST_USER_LOGIN_RESP& operator=(ST_USER_LOGIN_RESP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_USER_LOGIN_RESP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_USER_LOGIN_RESP* internal_default_instance() {
    return reinterpret_cast<const ST_USER_LOGIN_RESP*>(
               &_ST_USER_LOGIN_RESP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ST_USER_LOGIN_RESP* other);
  friend void swap(ST_USER_LOGIN_RESP& a, ST_USER_LOGIN_RESP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_USER_LOGIN_RESP* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_USER_LOGIN_RESP>(NULL);
  }

  ST_USER_LOGIN_RESP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_USER_LOGIN_RESP>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_USER_LOGIN_RESP& from);
  void MergeFrom(const ST_USER_LOGIN_RESP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_USER_LOGIN_RESP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MEProInterface.ST_SIG_IP_INFO stIPInfo = 4;
  int stipinfo_size() const;
  void clear_stipinfo();
  static const int kStIPInfoFieldNumber = 4;
  ::MEProInterface::ST_SIG_IP_INFO* mutable_stipinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_IP_INFO >*
      mutable_stipinfo();
  const ::MEProInterface::ST_SIG_IP_INFO& stipinfo(int index) const;
  ::MEProInterface::ST_SIG_IP_INFO* add_stipinfo();
  const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_IP_INFO >&
      stipinfo() const;

  // repeated .MEProInterface.ST_SYMBOL_INFO stSymbolInfo = 6;
  int stsymbolinfo_size() const;
  void clear_stsymbolinfo();
  static const int kStSymbolInfoFieldNumber = 6;
  ::MEProInterface::ST_SYMBOL_INFO* mutable_stsymbolinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SYMBOL_INFO >*
      mutable_stsymbolinfo();
  const ::MEProInterface::ST_SYMBOL_INFO& stsymbolinfo(int index) const;
  ::MEProInterface::ST_SYMBOL_INFO* add_stsymbolinfo();
  const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SYMBOL_INFO >&
      stsymbolinfo() const;

  // bytes chUserName = 7;
  void clear_chusername();
  static const int kChUserNameFieldNumber = 7;
  const ::std::string& chusername() const;
  void set_chusername(const ::std::string& value);
  #if LANG_CXX11
  void set_chusername(::std::string&& value);
  #endif
  void set_chusername(const char* value);
  void set_chusername(const void* value, size_t size);
  ::std::string* mutable_chusername();
  ::std::string* release_chusername();
  void set_allocated_chusername(::std::string* chusername);

  // uint32 ucLoginRsp = 1;
  void clear_ucloginrsp();
  static const int kUcLoginRspFieldNumber = 1;
  ::google::protobuf::uint32 ucloginrsp() const;
  void set_ucloginrsp(::google::protobuf::uint32 value);

  // uint32 uiUserID = 2;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 2;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiIPLisyNum = 3;
  void clear_uiiplisynum();
  static const int kUiIPLisyNumFieldNumber = 3;
  ::google::protobuf::uint32 uiiplisynum() const;
  void set_uiiplisynum(::google::protobuf::uint32 value);

  // uint32 uiSymbolNum = 5;
  void clear_uisymbolnum();
  static const int kUiSymbolNumFieldNumber = 5;
  ::google::protobuf::uint32 uisymbolnum() const;
  void set_uisymbolnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_USER_LOGIN_RESP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_IP_INFO > stipinfo_;
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SYMBOL_INFO > stsymbolinfo_;
  ::google::protobuf::internal::ArenaStringPtr chusername_;
  ::google::protobuf::uint32 ucloginrsp_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiiplisynum_;
  ::google::protobuf::uint32 uisymbolnum_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_USER_LOGIN_RESPImpl();
};
// -------------------------------------------------------------------

class ST_SUBMIT_ORDER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SUBMIT_ORDER) */ {
 public:
  ST_SUBMIT_ORDER();
  virtual ~ST_SUBMIT_ORDER();

  ST_SUBMIT_ORDER(const ST_SUBMIT_ORDER& from);

  inline ST_SUBMIT_ORDER& operator=(const ST_SUBMIT_ORDER& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_ORDER(ST_SUBMIT_ORDER&& from) noexcept
    : ST_SUBMIT_ORDER() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_ORDER& operator=(ST_SUBMIT_ORDER&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_ORDER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_ORDER* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_ORDER*>(
               &_ST_SUBMIT_ORDER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ST_SUBMIT_ORDER* other);
  friend void swap(ST_SUBMIT_ORDER& a, ST_SUBMIT_ORDER& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_ORDER* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_ORDER>(NULL);
  }

  ST_SUBMIT_ORDER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_ORDER>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_ORDER& from);
  void MergeFrom(const ST_SUBMIT_ORDER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_ORDER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint64 lSubmitTime = 2;
  void clear_lsubmittime();
  static const int kLSubmitTimeFieldNumber = 2;
  ::google::protobuf::uint64 lsubmittime() const;
  void set_lsubmittime(::google::protobuf::uint64 value);

  // uint32 ucTransType = 3;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 3;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // uint32 ucOrderType = 4;
  void clear_ucordertype();
  static const int kUcOrderTypeFieldNumber = 4;
  ::google::protobuf::uint32 ucordertype() const;
  void set_ucordertype(::google::protobuf::uint32 value);

  // uint32 uiUserID = 5;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 5;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 6;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 6;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // int64 lPrice = 7;
  void clear_lprice();
  static const int kLPriceFieldNumber = 7;
  ::google::protobuf::int64 lprice() const;
  void set_lprice(::google::protobuf::int64 value);

  // int64 lNumber = 8;
  void clear_lnumber();
  static const int kLNumberFieldNumber = 8;
  ::google::protobuf::int64 lnumber() const;
  void set_lnumber(::google::protobuf::int64 value);

  // uint64 ucRecordID = 10;
  void clear_ucrecordid();
  static const int kUcRecordIDFieldNumber = 10;
  ::google::protobuf::uint64 ucrecordid() const;
  void set_ucrecordid(::google::protobuf::uint64 value);

  // uint32 uiOrderIndex = 9;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 9;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SUBMIT_ORDER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint64 lsubmittime_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::uint32 ucordertype_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::int64 lprice_;
  ::google::protobuf::int64 lnumber_;
  ::google::protobuf::uint64 ucrecordid_;
  ::google::protobuf::uint32 uiorderindex_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SUBMIT_ORDERImpl();
};
// -------------------------------------------------------------------

class ST_SUBMIT_CAMCEL_ORDER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SUBMIT_CAMCEL_ORDER) */ {
 public:
  ST_SUBMIT_CAMCEL_ORDER();
  virtual ~ST_SUBMIT_CAMCEL_ORDER();

  ST_SUBMIT_CAMCEL_ORDER(const ST_SUBMIT_CAMCEL_ORDER& from);

  inline ST_SUBMIT_CAMCEL_ORDER& operator=(const ST_SUBMIT_CAMCEL_ORDER& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_CAMCEL_ORDER(ST_SUBMIT_CAMCEL_ORDER&& from) noexcept
    : ST_SUBMIT_CAMCEL_ORDER() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_CAMCEL_ORDER& operator=(ST_SUBMIT_CAMCEL_ORDER&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_CAMCEL_ORDER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_CAMCEL_ORDER* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_CAMCEL_ORDER*>(
               &_ST_SUBMIT_CAMCEL_ORDER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ST_SUBMIT_CAMCEL_ORDER* other);
  friend void swap(ST_SUBMIT_CAMCEL_ORDER& a, ST_SUBMIT_CAMCEL_ORDER& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_CAMCEL_ORDER* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_CAMCEL_ORDER>(NULL);
  }

  ST_SUBMIT_CAMCEL_ORDER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_CAMCEL_ORDER>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_CAMCEL_ORDER& from);
  void MergeFrom(const ST_SUBMIT_CAMCEL_ORDER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_CAMCEL_ORDER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint64 lOrderIDFrME = 2;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 2;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // uint32 uiOrderIndex = 3;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 3;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // uint32 uiUserID = 4;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 4;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 5;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 5;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint32 ucTransType = 6;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 6;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // int64 lPrice = 7;
  void clear_lprice();
  static const int kLPriceFieldNumber = 7;
  ::google::protobuf::int64 lprice() const;
  void set_lprice(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SUBMIT_CAMCEL_ORDER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint64 lorderidfrme_;
  ::google::protobuf::uint32 uiorderindex_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::int64 lprice_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SUBMIT_CAMCEL_ORDERImpl();
};
// -------------------------------------------------------------------

class ST_SUBMIT_ORDER_RESP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SUBMIT_ORDER_RESP) */ {
 public:
  ST_SUBMIT_ORDER_RESP();
  virtual ~ST_SUBMIT_ORDER_RESP();

  ST_SUBMIT_ORDER_RESP(const ST_SUBMIT_ORDER_RESP& from);

  inline ST_SUBMIT_ORDER_RESP& operator=(const ST_SUBMIT_ORDER_RESP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_ORDER_RESP(ST_SUBMIT_ORDER_RESP&& from) noexcept
    : ST_SUBMIT_ORDER_RESP() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_ORDER_RESP& operator=(ST_SUBMIT_ORDER_RESP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_ORDER_RESP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_ORDER_RESP* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_ORDER_RESP*>(
               &_ST_SUBMIT_ORDER_RESP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ST_SUBMIT_ORDER_RESP* other);
  friend void swap(ST_SUBMIT_ORDER_RESP& a, ST_SUBMIT_ORDER_RESP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_ORDER_RESP* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_ORDER_RESP>(NULL);
  }

  ST_SUBMIT_ORDER_RESP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SUBMIT_ORDER_RESP>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_ORDER_RESP& from);
  void MergeFrom(const ST_SUBMIT_ORDER_RESP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_ORDER_RESP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // string strText = 6;
  void clear_strtext();
  static const int kStrTextFieldNumber = 6;
  const ::std::string& strtext() const;
  void set_strtext(const ::std::string& value);
  #if LANG_CXX11
  void set_strtext(::std::string&& value);
  #endif
  void set_strtext(const char* value);
  void set_strtext(const char* value, size_t size);
  ::std::string* mutable_strtext();
  ::std::string* release_strtext();
  void set_allocated_strtext(::std::string* strtext);

  // uint64 lOrderIDFrME = 3;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 3;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // uint32 uiSubmitOrderIype = 2;
  void clear_uisubmitorderiype();
  static const int kUiSubmitOrderIypeFieldNumber = 2;
  ::google::protobuf::uint32 uisubmitorderiype() const;
  void set_uisubmitorderiype(::google::protobuf::uint32 value);

  // uint32 uiOrderIndex = 4;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 4;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // uint32 uiOrderStatus = 5;
  void clear_uiorderstatus();
  static const int kUiOrderStatusFieldNumber = 5;
  ::google::protobuf::uint32 uiorderstatus() const;
  void set_uiorderstatus(::google::protobuf::uint32 value);

  // uint32 uiUserID = 7;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 7;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 ucTransType = 8;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 8;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SUBMIT_ORDER_RESP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::internal::ArenaStringPtr strtext_;
  ::google::protobuf::uint64 lorderidfrme_;
  ::google::protobuf::uint32 uisubmitorderiype_;
  ::google::protobuf::uint32 uiorderindex_;
  ::google::protobuf::uint32 uiorderstatus_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uctranstype_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SUBMIT_ORDER_RESPImpl();
};
// -------------------------------------------------------------------

class ST_TRANS_ORDER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_TRANS_ORDER_INFO) */ {
 public:
  ST_TRANS_ORDER_INFO();
  virtual ~ST_TRANS_ORDER_INFO();

  ST_TRANS_ORDER_INFO(const ST_TRANS_ORDER_INFO& from);

  inline ST_TRANS_ORDER_INFO& operator=(const ST_TRANS_ORDER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_TRANS_ORDER_INFO(ST_TRANS_ORDER_INFO&& from) noexcept
    : ST_TRANS_ORDER_INFO() {
    *this = ::std::move(from);
  }

  inline ST_TRANS_ORDER_INFO& operator=(ST_TRANS_ORDER_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_TRANS_ORDER_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_TRANS_ORDER_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_TRANS_ORDER_INFO*>(
               &_ST_TRANS_ORDER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ST_TRANS_ORDER_INFO* other);
  friend void swap(ST_TRANS_ORDER_INFO& a, ST_TRANS_ORDER_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_TRANS_ORDER_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_TRANS_ORDER_INFO>(NULL);
  }

  ST_TRANS_ORDER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_TRANS_ORDER_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_TRANS_ORDER_INFO& from);
  void MergeFrom(const ST_TRANS_ORDER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_TRANS_ORDER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strBidOrderID = 1;
  void clear_strbidorderid();
  static const int kStrBidOrderIDFieldNumber = 1;
  const ::std::string& strbidorderid() const;
  void set_strbidorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strbidorderid(::std::string&& value);
  #endif
  void set_strbidorderid(const char* value);
  void set_strbidorderid(const char* value, size_t size);
  ::std::string* mutable_strbidorderid();
  ::std::string* release_strbidorderid();
  void set_allocated_strbidorderid(::std::string* strbidorderid);

  // string strAskOrderID = 2;
  void clear_straskorderid();
  static const int kStrAskOrderIDFieldNumber = 2;
  const ::std::string& straskorderid() const;
  void set_straskorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_straskorderid(::std::string&& value);
  #endif
  void set_straskorderid(const char* value);
  void set_straskorderid(const char* value, size_t size);
  ::std::string* mutable_straskorderid();
  ::std::string* release_straskorderid();
  void set_allocated_straskorderid(::std::string* straskorderid);

  // uint32 uiBidUserID = 3;
  void clear_uibiduserid();
  static const int kUiBidUserIDFieldNumber = 3;
  ::google::protobuf::uint32 uibiduserid() const;
  void set_uibiduserid(::google::protobuf::uint32 value);

  // uint32 uiAskUserID = 4;
  void clear_uiaskuserid();
  static const int kUiAskUserIDFieldNumber = 4;
  ::google::protobuf::uint32 uiaskuserid() const;
  void set_uiaskuserid(::google::protobuf::uint32 value);

  // int64 fPrice = 5;
  void clear_fprice();
  static const int kFPriceFieldNumber = 5;
  ::google::protobuf::int64 fprice() const;
  void set_fprice(::google::protobuf::int64 value);

  // int64 fNumber = 6;
  void clear_fnumber();
  static const int kFNumberFieldNumber = 6;
  ::google::protobuf::int64 fnumber() const;
  void set_fnumber(::google::protobuf::int64 value);

  // uint64 ucRecordID = 8;
  void clear_ucrecordid();
  static const int kUcRecordIDFieldNumber = 8;
  ::google::protobuf::uint64 ucrecordid() const;
  void set_ucrecordid(::google::protobuf::uint64 value);

  // uint32 ucExchType = 7;
  void clear_ucexchtype();
  static const int kUcExchTypeFieldNumber = 7;
  ::google::protobuf::uint32 ucexchtype() const;
  void set_ucexchtype(::google::protobuf::uint32 value);

  // uint32 ucOrderStatus = 9;
  void clear_ucorderstatus();
  static const int kUcOrderStatusFieldNumber = 9;
  ::google::protobuf::uint32 ucorderstatus() const;
  void set_ucorderstatus(::google::protobuf::uint32 value);

  // uint64 meBidOrderID = 11;
  void clear_mebidorderid();
  static const int kMeBidOrderIDFieldNumber = 11;
  ::google::protobuf::uint64 mebidorderid() const;
  void set_mebidorderid(::google::protobuf::uint64 value);

  // uint64 meAskOrderID = 12;
  void clear_measkorderid();
  static const int kMeAskOrderIDFieldNumber = 12;
  ::google::protobuf::uint64 measkorderid() const;
  void set_measkorderid(::google::protobuf::uint64 value);

  // uint32 uiExchObjID = 10;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 10;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_TRANS_ORDER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strbidorderid_;
  ::google::protobuf::internal::ArenaStringPtr straskorderid_;
  ::google::protobuf::uint32 uibiduserid_;
  ::google::protobuf::uint32 uiaskuserid_;
  ::google::protobuf::int64 fprice_;
  ::google::protobuf::int64 fnumber_;
  ::google::protobuf::uint64 ucrecordid_;
  ::google::protobuf::uint32 ucexchtype_;
  ::google::protobuf::uint32 ucorderstatus_;
  ::google::protobuf::uint64 mebidorderid_;
  ::google::protobuf::uint64 measkorderid_;
  ::google::protobuf::uint32 uiexchobjid_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_TRANS_ORDER_INFOImpl();
};
// -------------------------------------------------------------------

class ST_REP_TRANS_ORDER_REQUEST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_REP_TRANS_ORDER_REQUEST) */ {
 public:
  ST_REP_TRANS_ORDER_REQUEST();
  virtual ~ST_REP_TRANS_ORDER_REQUEST();

  ST_REP_TRANS_ORDER_REQUEST(const ST_REP_TRANS_ORDER_REQUEST& from);

  inline ST_REP_TRANS_ORDER_REQUEST& operator=(const ST_REP_TRANS_ORDER_REQUEST& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_REP_TRANS_ORDER_REQUEST(ST_REP_TRANS_ORDER_REQUEST&& from) noexcept
    : ST_REP_TRANS_ORDER_REQUEST() {
    *this = ::std::move(from);
  }

  inline ST_REP_TRANS_ORDER_REQUEST& operator=(ST_REP_TRANS_ORDER_REQUEST&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_REP_TRANS_ORDER_REQUEST& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_REP_TRANS_ORDER_REQUEST* internal_default_instance() {
    return reinterpret_cast<const ST_REP_TRANS_ORDER_REQUEST*>(
               &_ST_REP_TRANS_ORDER_REQUEST_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ST_REP_TRANS_ORDER_REQUEST* other);
  friend void swap(ST_REP_TRANS_ORDER_REQUEST& a, ST_REP_TRANS_ORDER_REQUEST& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_REP_TRANS_ORDER_REQUEST* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_REP_TRANS_ORDER_REQUEST>(NULL);
  }

  ST_REP_TRANS_ORDER_REQUEST* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_REP_TRANS_ORDER_REQUEST>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_REP_TRANS_ORDER_REQUEST& from);
  void MergeFrom(const ST_REP_TRANS_ORDER_REQUEST& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_REP_TRANS_ORDER_REQUEST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ucExchID = 2;
  void clear_ucexchid();
  static const int kUcExchIDFieldNumber = 2;
  ::google::protobuf::uint64 ucexchid() const;
  void set_ucexchid(::google::protobuf::uint64 value);

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 3;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 3;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_REP_TRANS_ORDER_REQUEST)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ucexchid_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_REP_TRANS_ORDER_REQUESTImpl();
};
// -------------------------------------------------------------------

class ST_QUERY_ORDER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_QUERY_ORDER_INFO) */ {
 public:
  ST_QUERY_ORDER_INFO();
  virtual ~ST_QUERY_ORDER_INFO();

  ST_QUERY_ORDER_INFO(const ST_QUERY_ORDER_INFO& from);

  inline ST_QUERY_ORDER_INFO& operator=(const ST_QUERY_ORDER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_QUERY_ORDER_INFO(ST_QUERY_ORDER_INFO&& from) noexcept
    : ST_QUERY_ORDER_INFO() {
    *this = ::std::move(from);
  }

  inline ST_QUERY_ORDER_INFO& operator=(ST_QUERY_ORDER_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_QUERY_ORDER_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_QUERY_ORDER_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_QUERY_ORDER_INFO*>(
               &_ST_QUERY_ORDER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ST_QUERY_ORDER_INFO* other);
  friend void swap(ST_QUERY_ORDER_INFO& a, ST_QUERY_ORDER_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_QUERY_ORDER_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_QUERY_ORDER_INFO>(NULL);
  }

  ST_QUERY_ORDER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_QUERY_ORDER_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_QUERY_ORDER_INFO& from);
  void MergeFrom(const ST_QUERY_ORDER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_QUERY_ORDER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 2;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 4;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 4;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint64 lOrderIDFrME = 3;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 3;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_QUERY_ORDER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint64 lorderidfrme_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_QUERY_ORDER_INFOImpl();
};
// -------------------------------------------------------------------

class ST_QUERY_ORDER_RES : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_QUERY_ORDER_RES) */ {
 public:
  ST_QUERY_ORDER_RES();
  virtual ~ST_QUERY_ORDER_RES();

  ST_QUERY_ORDER_RES(const ST_QUERY_ORDER_RES& from);

  inline ST_QUERY_ORDER_RES& operator=(const ST_QUERY_ORDER_RES& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_QUERY_ORDER_RES(ST_QUERY_ORDER_RES&& from) noexcept
    : ST_QUERY_ORDER_RES() {
    *this = ::std::move(from);
  }

  inline ST_QUERY_ORDER_RES& operator=(ST_QUERY_ORDER_RES&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_QUERY_ORDER_RES& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_QUERY_ORDER_RES* internal_default_instance() {
    return reinterpret_cast<const ST_QUERY_ORDER_RES*>(
               &_ST_QUERY_ORDER_RES_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ST_QUERY_ORDER_RES* other);
  friend void swap(ST_QUERY_ORDER_RES& a, ST_QUERY_ORDER_RES& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_QUERY_ORDER_RES* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_QUERY_ORDER_RES>(NULL);
  }

  ST_QUERY_ORDER_RES* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_QUERY_ORDER_RES>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_QUERY_ORDER_RES& from);
  void MergeFrom(const ST_QUERY_ORDER_RES& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_QUERY_ORDER_RES* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 2;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 3;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 3;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint32 wTransStatus = 4;
  void clear_wtransstatus();
  static const int kWTransStatusFieldNumber = 4;
  ::google::protobuf::uint32 wtransstatus() const;
  void set_wtransstatus(::google::protobuf::uint32 value);

  // uint32 ucTransType = 5;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 5;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // int64 lOrgPrice = 6;
  void clear_lorgprice();
  static const int kLOrgPriceFieldNumber = 6;
  ::google::protobuf::int64 lorgprice() const;
  void set_lorgprice(::google::protobuf::int64 value);

  // int64 lOrgNumber = 7;
  void clear_lorgnumber();
  static const int kLOrgNumberFieldNumber = 7;
  ::google::protobuf::int64 lorgnumber() const;
  void set_lorgnumber(::google::protobuf::int64 value);

  // int64 lAvgTransferPrice = 8;
  void clear_lavgtransferprice();
  static const int kLAvgTransferPriceFieldNumber = 8;
  ::google::protobuf::int64 lavgtransferprice() const;
  void set_lavgtransferprice(::google::protobuf::int64 value);

  // int64 lAvgTransferNum = 9;
  void clear_lavgtransfernum();
  static const int kLAvgTransferNumFieldNumber = 9;
  ::google::protobuf::int64 lavgtransfernum() const;
  void set_lavgtransfernum(::google::protobuf::int64 value);

  // uint64 lOrderIDFrME = 10;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 10;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_QUERY_ORDER_RES)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint32 wtransstatus_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::int64 lorgprice_;
  ::google::protobuf::int64 lorgnumber_;
  ::google::protobuf::int64 lavgtransferprice_;
  ::google::protobuf::int64 lavgtransfernum_;
  ::google::protobuf::uint64 lorderidfrme_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_QUERY_ORDER_RESImpl();
};
// -------------------------------------------------------------------

class ST_MART_QUOTATION : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_MART_QUOTATION) */ {
 public:
  ST_MART_QUOTATION();
  virtual ~ST_MART_QUOTATION();

  ST_MART_QUOTATION(const ST_MART_QUOTATION& from);

  inline ST_MART_QUOTATION& operator=(const ST_MART_QUOTATION& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_MART_QUOTATION(ST_MART_QUOTATION&& from) noexcept
    : ST_MART_QUOTATION() {
    *this = ::std::move(from);
  }

  inline ST_MART_QUOTATION& operator=(ST_MART_QUOTATION&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_MART_QUOTATION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_MART_QUOTATION* internal_default_instance() {
    return reinterpret_cast<const ST_MART_QUOTATION*>(
               &_ST_MART_QUOTATION_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ST_MART_QUOTATION* other);
  friend void swap(ST_MART_QUOTATION& a, ST_MART_QUOTATION& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_MART_QUOTATION* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MART_QUOTATION>(NULL);
  }

  ST_MART_QUOTATION* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MART_QUOTATION>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_MART_QUOTATION& from);
  void MergeFrom(const ST_MART_QUOTATION& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_MART_QUOTATION* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 2;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 2;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // int64 lCurDealProce = 3;
  void clear_lcurdealproce();
  static const int kLCurDealProceFieldNumber = 3;
  ::google::protobuf::int64 lcurdealproce() const;
  void set_lcurdealproce(::google::protobuf::int64 value);

  // int64 lTotalDealProce = 4;
  void clear_ltotaldealproce();
  static const int kLTotalDealProceFieldNumber = 4;
  ::google::protobuf::int64 ltotaldealproce() const;
  void set_ltotaldealproce(::google::protobuf::int64 value);

  // int64 lBeginProce = 5;
  void clear_lbeginproce();
  static const int kLBeginProceFieldNumber = 5;
  ::google::protobuf::int64 lbeginproce() const;
  void set_lbeginproce(::google::protobuf::int64 value);

  // int64 lHighestProce = 6;
  void clear_lhighestproce();
  static const int kLHighestProceFieldNumber = 6;
  ::google::protobuf::int64 lhighestproce() const;
  void set_lhighestproce(::google::protobuf::int64 value);

  // int64 lMinimumProce = 7;
  void clear_lminimumproce();
  static const int kLMinimumProceFieldNumber = 7;
  ::google::protobuf::int64 lminimumproce() const;
  void set_lminimumproce(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_MART_QUOTATION)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::int64 lcurdealproce_;
  ::google::protobuf::int64 ltotaldealproce_;
  ::google::protobuf::int64 lbeginproce_;
  ::google::protobuf::int64 lhighestproce_;
  ::google::protobuf::int64 lminimumproce_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_MART_QUOTATIONImpl();
};
// -------------------------------------------------------------------

class ST_SIG_ORDER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_SIG_ORDER_INFO) */ {
 public:
  ST_SIG_ORDER_INFO();
  virtual ~ST_SIG_ORDER_INFO();

  ST_SIG_ORDER_INFO(const ST_SIG_ORDER_INFO& from);

  inline ST_SIG_ORDER_INFO& operator=(const ST_SIG_ORDER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SIG_ORDER_INFO(ST_SIG_ORDER_INFO&& from) noexcept
    : ST_SIG_ORDER_INFO() {
    *this = ::std::move(from);
  }

  inline ST_SIG_ORDER_INFO& operator=(ST_SIG_ORDER_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SIG_ORDER_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SIG_ORDER_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_SIG_ORDER_INFO*>(
               &_ST_SIG_ORDER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ST_SIG_ORDER_INFO* other);
  friend void swap(ST_SIG_ORDER_INFO& a, ST_SIG_ORDER_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SIG_ORDER_INFO* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SIG_ORDER_INFO>(NULL);
  }

  ST_SIG_ORDER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_SIG_ORDER_INFO>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SIG_ORDER_INFO& from);
  void MergeFrom(const ST_SIG_ORDER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SIG_ORDER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 lPrice = 1;
  void clear_lprice();
  static const int kLPriceFieldNumber = 1;
  ::google::protobuf::uint64 lprice() const;
  void set_lprice(::google::protobuf::uint64 value);

  // uint64 lNumber = 2;
  void clear_lnumber();
  static const int kLNumberFieldNumber = 2;
  ::google::protobuf::uint64 lnumber() const;
  void set_lnumber(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_SIG_ORDER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 lprice_;
  ::google::protobuf::uint64 lnumber_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_SIG_ORDER_INFOImpl();
};
// -------------------------------------------------------------------

class ST_MARKET_ORDERBOOK : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_MARKET_ORDERBOOK) */ {
 public:
  ST_MARKET_ORDERBOOK();
  virtual ~ST_MARKET_ORDERBOOK();

  ST_MARKET_ORDERBOOK(const ST_MARKET_ORDERBOOK& from);

  inline ST_MARKET_ORDERBOOK& operator=(const ST_MARKET_ORDERBOOK& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_MARKET_ORDERBOOK(ST_MARKET_ORDERBOOK&& from) noexcept
    : ST_MARKET_ORDERBOOK() {
    *this = ::std::move(from);
  }

  inline ST_MARKET_ORDERBOOK& operator=(ST_MARKET_ORDERBOOK&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_MARKET_ORDERBOOK& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_MARKET_ORDERBOOK* internal_default_instance() {
    return reinterpret_cast<const ST_MARKET_ORDERBOOK*>(
               &_ST_MARKET_ORDERBOOK_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ST_MARKET_ORDERBOOK* other);
  friend void swap(ST_MARKET_ORDERBOOK& a, ST_MARKET_ORDERBOOK& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_MARKET_ORDERBOOK* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MARKET_ORDERBOOK>(NULL);
  }

  ST_MARKET_ORDERBOOK* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MARKET_ORDERBOOK>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_MARKET_ORDERBOOK& from);
  void MergeFrom(const ST_MARKET_ORDERBOOK& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_MARKET_ORDERBOOK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MEProInterface.ST_SIG_ORDER_INFO stBidOrder = 4;
  int stbidorder_size() const;
  void clear_stbidorder();
  static const int kStBidOrderFieldNumber = 4;
  ::MEProInterface::ST_SIG_ORDER_INFO* mutable_stbidorder(int index);
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >*
      mutable_stbidorder();
  const ::MEProInterface::ST_SIG_ORDER_INFO& stbidorder(int index) const;
  ::MEProInterface::ST_SIG_ORDER_INFO* add_stbidorder();
  const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >&
      stbidorder() const;

  // repeated .MEProInterface.ST_SIG_ORDER_INFO stAskOrder = 6;
  int staskorder_size() const;
  void clear_staskorder();
  static const int kStAskOrderFieldNumber = 6;
  ::MEProInterface::ST_SIG_ORDER_INFO* mutable_staskorder(int index);
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >*
      mutable_staskorder();
  const ::MEProInterface::ST_SIG_ORDER_INFO& staskorder(int index) const;
  ::MEProInterface::ST_SIG_ORDER_INFO* add_staskorder();
  const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >&
      staskorder() const;

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 2;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 2;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint32 uiBidOrderNum = 3;
  void clear_uibidordernum();
  static const int kUiBidOrderNumFieldNumber = 3;
  ::google::protobuf::uint32 uibidordernum() const;
  void set_uibidordernum(::google::protobuf::uint32 value);

  // uint32 uiAskOrderNum = 5;
  void clear_uiaskordernum();
  static const int kUiAskOrderNumFieldNumber = 5;
  ::google::protobuf::uint32 uiaskordernum() const;
  void set_uiaskordernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_MARKET_ORDERBOOK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO > stbidorder_;
  ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO > staskorder_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint32 uibidordernum_;
  ::google::protobuf::uint32 uiaskordernum_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_MARKET_ORDERBOOKImpl();
};
// -------------------------------------------------------------------

class ST_MAINTAIN_LOG : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.ST_MAINTAIN_LOG) */ {
 public:
  ST_MAINTAIN_LOG();
  virtual ~ST_MAINTAIN_LOG();

  ST_MAINTAIN_LOG(const ST_MAINTAIN_LOG& from);

  inline ST_MAINTAIN_LOG& operator=(const ST_MAINTAIN_LOG& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_MAINTAIN_LOG(ST_MAINTAIN_LOG&& from) noexcept
    : ST_MAINTAIN_LOG() {
    *this = ::std::move(from);
  }

  inline ST_MAINTAIN_LOG& operator=(ST_MAINTAIN_LOG&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_MAINTAIN_LOG& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_MAINTAIN_LOG* internal_default_instance() {
    return reinterpret_cast<const ST_MAINTAIN_LOG*>(
               &_ST_MAINTAIN_LOG_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ST_MAINTAIN_LOG* other);
  friend void swap(ST_MAINTAIN_LOG& a, ST_MAINTAIN_LOG& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_MAINTAIN_LOG* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MAINTAIN_LOG>(NULL);
  }

  ST_MAINTAIN_LOG* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ST_MAINTAIN_LOG>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_MAINTAIN_LOG& from);
  void MergeFrom(const ST_MAINTAIN_LOG& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_MAINTAIN_LOG* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strHostName = 1;
  void clear_strhostname();
  static const int kStrHostNameFieldNumber = 1;
  const ::std::string& strhostname() const;
  void set_strhostname(const ::std::string& value);
  #if LANG_CXX11
  void set_strhostname(::std::string&& value);
  #endif
  void set_strhostname(const char* value);
  void set_strhostname(const char* value, size_t size);
  ::std::string* mutable_strhostname();
  ::std::string* release_strhostname();
  void set_allocated_strhostname(::std::string* strhostname);

  // string strLogContent = 5;
  void clear_strlogcontent();
  static const int kStrLogContentFieldNumber = 5;
  const ::std::string& strlogcontent() const;
  void set_strlogcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_strlogcontent(::std::string&& value);
  #endif
  void set_strlogcontent(const char* value);
  void set_strlogcontent(const char* value, size_t size);
  ::std::string* mutable_strlogcontent();
  ::std::string* release_strlogcontent();
  void set_allocated_strlogcontent(::std::string* strlogcontent);

  // uint32 chLogLevel = 2;
  void clear_chloglevel();
  static const int kChLogLevelFieldNumber = 2;
  ::google::protobuf::uint32 chloglevel() const;
  void set_chloglevel(::google::protobuf::uint32 value);

  // uint32 chModuleIndex = 3;
  void clear_chmoduleindex();
  static const int kChModuleIndexFieldNumber = 3;
  ::google::protobuf::uint32 chmoduleindex() const;
  void set_chmoduleindex(::google::protobuf::uint32 value);

  // uint64 uiRepTime = 4;
  void clear_uireptime();
  static const int kUiRepTimeFieldNumber = 4;
  ::google::protobuf::uint64 uireptime() const;
  void set_uireptime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEProInterface.ST_MAINTAIN_LOG)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strhostname_;
  ::google::protobuf::internal::ArenaStringPtr strlogcontent_;
  ::google::protobuf::uint32 chloglevel_;
  ::google::protobuf::uint32 chmoduleindex_;
  ::google::protobuf::uint64 uireptime_;
  mutable int _cached_size_;
  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsST_MAINTAIN_LOGImpl();
};
// -------------------------------------------------------------------

class IntervalMsgHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEProInterface.IntervalMsgHeader) */ {
 public:
  IntervalMsgHeader();
  virtual ~IntervalMsgHeader();

  IntervalMsgHeader(const IntervalMsgHeader& from);

  inline IntervalMsgHeader& operator=(const IntervalMsgHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntervalMsgHeader(IntervalMsgHeader&& from) noexcept
    : IntervalMsgHeader() {
    *this = ::std::move(from);
  }

  inline IntervalMsgHeader& operator=(IntervalMsgHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntervalMsgHeader& default_instance();

  enum MsgBodyCase {
    kStUserLogin = 4,
    kStLoginResp = 5,
    kStSubmitOrder = 6,
    kStCancelOrder = 7,
    kStOrderResp = 8,
    kStQueryOrder = 9,
    kStQueryResp = 10,
    kStTransOrder = 11,
    kStMarketData = 12,
    kStReptransReq = 13,
    kStSubcriUserLogin = 14,
    kStQueryHistoryOrder = 15,
    kStMarketOrderBook = 16,
    kStMaintainLog = 17,
    MSGBODY_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalMsgHeader* internal_default_instance() {
    return reinterpret_cast<const IntervalMsgHeader*>(
               &_IntervalMsgHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(IntervalMsgHeader* other);
  friend void swap(IntervalMsgHeader& a, IntervalMsgHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntervalMsgHeader* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IntervalMsgHeader>(NULL);
  }

  IntervalMsgHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IntervalMsgHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IntervalMsgHeader& from);
  void MergeFrom(const IntervalMsgHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IntervalMsgHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 iFlowNumber = 1;
  void clear_iflownumber();
  static const int kIFlowNumberFieldNumber = 1;
  ::google::protobuf::int32 iflownumber() const;
  void set_iflownumber(::google::protobuf::int32 value);

  // int32 iCmd = 2;
  void clear_icmd();
  static const int kICmdFieldNumber = 2;
  ::google::protobuf::int32 icmd() const;
  void set_icmd(::google::protobuf::int32 value);

  // int32 iMsgType = 3;
  void clear_imsgtype();
  static const int kIMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 imsgtype() const;
  void set_imsgtype(::google::protobuf::int32 value);

  // .MEProInterface.ST_USER_LOGIN_INFO stUserLogin = 4;
  bool has_stuserlogin() const;
  void clear_stuserlogin();
  static const int kStUserLoginFieldNumber = 4;
  const ::MEProInterface::ST_USER_LOGIN_INFO& stuserlogin() const;
  ::MEProInterface::ST_USER_LOGIN_INFO* release_stuserlogin();
  ::MEProInterface::ST_USER_LOGIN_INFO* mutable_stuserlogin();
  void set_allocated_stuserlogin(::MEProInterface::ST_USER_LOGIN_INFO* stuserlogin);

  // .MEProInterface.ST_USER_LOGIN_RESP stLoginResp = 5;
  bool has_stloginresp() const;
  void clear_stloginresp();
  static const int kStLoginRespFieldNumber = 5;
  const ::MEProInterface::ST_USER_LOGIN_RESP& stloginresp() const;
  ::MEProInterface::ST_USER_LOGIN_RESP* release_stloginresp();
  ::MEProInterface::ST_USER_LOGIN_RESP* mutable_stloginresp();
  void set_allocated_stloginresp(::MEProInterface::ST_USER_LOGIN_RESP* stloginresp);

  // .MEProInterface.ST_SUBMIT_ORDER stSubmitOrder = 6;
  bool has_stsubmitorder() const;
  void clear_stsubmitorder();
  static const int kStSubmitOrderFieldNumber = 6;
  const ::MEProInterface::ST_SUBMIT_ORDER& stsubmitorder() const;
  ::MEProInterface::ST_SUBMIT_ORDER* release_stsubmitorder();
  ::MEProInterface::ST_SUBMIT_ORDER* mutable_stsubmitorder();
  void set_allocated_stsubmitorder(::MEProInterface::ST_SUBMIT_ORDER* stsubmitorder);

  // .MEProInterface.ST_SUBMIT_CAMCEL_ORDER stCancelOrder = 7;
  bool has_stcancelorder() const;
  void clear_stcancelorder();
  static const int kStCancelOrderFieldNumber = 7;
  const ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER& stcancelorder() const;
  ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* release_stcancelorder();
  ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* mutable_stcancelorder();
  void set_allocated_stcancelorder(::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* stcancelorder);

  // .MEProInterface.ST_SUBMIT_ORDER_RESP stOrderResp = 8;
  bool has_storderresp() const;
  void clear_storderresp();
  static const int kStOrderRespFieldNumber = 8;
  const ::MEProInterface::ST_SUBMIT_ORDER_RESP& storderresp() const;
  ::MEProInterface::ST_SUBMIT_ORDER_RESP* release_storderresp();
  ::MEProInterface::ST_SUBMIT_ORDER_RESP* mutable_storderresp();
  void set_allocated_storderresp(::MEProInterface::ST_SUBMIT_ORDER_RESP* storderresp);

  // .MEProInterface.ST_QUERY_ORDER_INFO stQueryOrder = 9;
  bool has_stqueryorder() const;
  void clear_stqueryorder();
  static const int kStQueryOrderFieldNumber = 9;
  const ::MEProInterface::ST_QUERY_ORDER_INFO& stqueryorder() const;
  ::MEProInterface::ST_QUERY_ORDER_INFO* release_stqueryorder();
  ::MEProInterface::ST_QUERY_ORDER_INFO* mutable_stqueryorder();
  void set_allocated_stqueryorder(::MEProInterface::ST_QUERY_ORDER_INFO* stqueryorder);

  // .MEProInterface.ST_QUERY_ORDER_RES stQueryResp = 10;
  bool has_stqueryresp() const;
  void clear_stqueryresp();
  static const int kStQueryRespFieldNumber = 10;
  const ::MEProInterface::ST_QUERY_ORDER_RES& stqueryresp() const;
  ::MEProInterface::ST_QUERY_ORDER_RES* release_stqueryresp();
  ::MEProInterface::ST_QUERY_ORDER_RES* mutable_stqueryresp();
  void set_allocated_stqueryresp(::MEProInterface::ST_QUERY_ORDER_RES* stqueryresp);

  // .MEProInterface.ST_TRANS_ORDER_INFO stTransOrder = 11;
  bool has_sttransorder() const;
  void clear_sttransorder();
  static const int kStTransOrderFieldNumber = 11;
  const ::MEProInterface::ST_TRANS_ORDER_INFO& sttransorder() const;
  ::MEProInterface::ST_TRANS_ORDER_INFO* release_sttransorder();
  ::MEProInterface::ST_TRANS_ORDER_INFO* mutable_sttransorder();
  void set_allocated_sttransorder(::MEProInterface::ST_TRANS_ORDER_INFO* sttransorder);

  // .MEProInterface.ST_MART_QUOTATION stMarketData = 12;
  bool has_stmarketdata() const;
  void clear_stmarketdata();
  static const int kStMarketDataFieldNumber = 12;
  const ::MEProInterface::ST_MART_QUOTATION& stmarketdata() const;
  ::MEProInterface::ST_MART_QUOTATION* release_stmarketdata();
  ::MEProInterface::ST_MART_QUOTATION* mutable_stmarketdata();
  void set_allocated_stmarketdata(::MEProInterface::ST_MART_QUOTATION* stmarketdata);

  // .MEProInterface.ST_REP_TRANS_ORDER_REQUEST stReptransReq = 13;
  bool has_streptransreq() const;
  void clear_streptransreq();
  static const int kStReptransReqFieldNumber = 13;
  const ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST& streptransreq() const;
  ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* release_streptransreq();
  ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* mutable_streptransreq();
  void set_allocated_streptransreq(::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* streptransreq);

  // .MEProInterface.ST_USER_LOGIN_INFO stSubcriUserLogin = 14;
  bool has_stsubcriuserlogin() const;
  void clear_stsubcriuserlogin();
  static const int kStSubcriUserLoginFieldNumber = 14;
  const ::MEProInterface::ST_USER_LOGIN_INFO& stsubcriuserlogin() const;
  ::MEProInterface::ST_USER_LOGIN_INFO* release_stsubcriuserlogin();
  ::MEProInterface::ST_USER_LOGIN_INFO* mutable_stsubcriuserlogin();
  void set_allocated_stsubcriuserlogin(::MEProInterface::ST_USER_LOGIN_INFO* stsubcriuserlogin);

  // .MEProInterface.ST_QUERY_ORDER_INFO stQueryHistoryOrder = 15;
  bool has_stqueryhistoryorder() const;
  void clear_stqueryhistoryorder();
  static const int kStQueryHistoryOrderFieldNumber = 15;
  const ::MEProInterface::ST_QUERY_ORDER_INFO& stqueryhistoryorder() const;
  ::MEProInterface::ST_QUERY_ORDER_INFO* release_stqueryhistoryorder();
  ::MEProInterface::ST_QUERY_ORDER_INFO* mutable_stqueryhistoryorder();
  void set_allocated_stqueryhistoryorder(::MEProInterface::ST_QUERY_ORDER_INFO* stqueryhistoryorder);

  // .MEProInterface.ST_MARKET_ORDERBOOK stMarketOrderBook = 16;
  bool has_stmarketorderbook() const;
  void clear_stmarketorderbook();
  static const int kStMarketOrderBookFieldNumber = 16;
  const ::MEProInterface::ST_MARKET_ORDERBOOK& stmarketorderbook() const;
  ::MEProInterface::ST_MARKET_ORDERBOOK* release_stmarketorderbook();
  ::MEProInterface::ST_MARKET_ORDERBOOK* mutable_stmarketorderbook();
  void set_allocated_stmarketorderbook(::MEProInterface::ST_MARKET_ORDERBOOK* stmarketorderbook);

  // .MEProInterface.ST_MAINTAIN_LOG stMaintainLog = 17;
  bool has_stmaintainlog() const;
  void clear_stmaintainlog();
  static const int kStMaintainLogFieldNumber = 17;
  const ::MEProInterface::ST_MAINTAIN_LOG& stmaintainlog() const;
  ::MEProInterface::ST_MAINTAIN_LOG* release_stmaintainlog();
  ::MEProInterface::ST_MAINTAIN_LOG* mutable_stmaintainlog();
  void set_allocated_stmaintainlog(::MEProInterface::ST_MAINTAIN_LOG* stmaintainlog);

  MsgBodyCase MsgBody_case() const;
  // @@protoc_insertion_point(class_scope:MEProInterface.IntervalMsgHeader)
 private:
  void set_has_stuserlogin();
  void set_has_stloginresp();
  void set_has_stsubmitorder();
  void set_has_stcancelorder();
  void set_has_storderresp();
  void set_has_stqueryorder();
  void set_has_stqueryresp();
  void set_has_sttransorder();
  void set_has_stmarketdata();
  void set_has_streptransreq();
  void set_has_stsubcriuserlogin();
  void set_has_stqueryhistoryorder();
  void set_has_stmarketorderbook();
  void set_has_stmaintainlog();

  inline bool has_MsgBody() const;
  void clear_MsgBody();
  inline void clear_has_MsgBody();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 iflownumber_;
  ::google::protobuf::int32 icmd_;
  ::google::protobuf::int32 imsgtype_;
  union MsgBodyUnion {
    MsgBodyUnion() {}
    ::MEProInterface::ST_USER_LOGIN_INFO* stuserlogin_;
    ::MEProInterface::ST_USER_LOGIN_RESP* stloginresp_;
    ::MEProInterface::ST_SUBMIT_ORDER* stsubmitorder_;
    ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* stcancelorder_;
    ::MEProInterface::ST_SUBMIT_ORDER_RESP* storderresp_;
    ::MEProInterface::ST_QUERY_ORDER_INFO* stqueryorder_;
    ::MEProInterface::ST_QUERY_ORDER_RES* stqueryresp_;
    ::MEProInterface::ST_TRANS_ORDER_INFO* sttransorder_;
    ::MEProInterface::ST_MART_QUOTATION* stmarketdata_;
    ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* streptransreq_;
    ::MEProInterface::ST_USER_LOGIN_INFO* stsubcriuserlogin_;
    ::MEProInterface::ST_QUERY_ORDER_INFO* stqueryhistoryorder_;
    ::MEProInterface::ST_MARKET_ORDERBOOK* stmarketorderbook_;
    ::MEProInterface::ST_MAINTAIN_LOG* stmaintainlog_;
  } MsgBody_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_OrderIntervalMsg_2eproto::TableStruct;
  friend void ::protobuf_OrderIntervalMsg_2eproto::InitDefaultsIntervalMsgHeaderImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ST_USER_LOGIN_INFO

// bytes chUserName = 1;
inline void ST_USER_LOGIN_INFO::clear_chusername() {
  chusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_USER_LOGIN_INFO::chusername() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
  return chusername_.GetNoArena();
}
inline void ST_USER_LOGIN_INFO::set_chusername(const ::std::string& value) {
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
}
#if LANG_CXX11
inline void ST_USER_LOGIN_INFO::set_chusername(::std::string&& value) {
  
  chusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
}
#endif
inline void ST_USER_LOGIN_INFO::set_chusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
}
inline void ST_USER_LOGIN_INFO::set_chusername(const void* value, size_t size) {
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
}
inline ::std::string* ST_USER_LOGIN_INFO::mutable_chusername() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
  return chusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_USER_LOGIN_INFO::release_chusername() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
  
  return chusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_USER_LOGIN_INFO::set_allocated_chusername(::std::string* chusername) {
  if (chusername != NULL) {
    
  } else {
    
  }
  chusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chusername);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_USER_LOGIN_INFO.chUserName)
}

// bytes chPasswordTxt = 2;
inline void ST_USER_LOGIN_INFO::clear_chpasswordtxt() {
  chpasswordtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_USER_LOGIN_INFO::chpasswordtxt() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
  return chpasswordtxt_.GetNoArena();
}
inline void ST_USER_LOGIN_INFO::set_chpasswordtxt(const ::std::string& value) {
  
  chpasswordtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
}
#if LANG_CXX11
inline void ST_USER_LOGIN_INFO::set_chpasswordtxt(::std::string&& value) {
  
  chpasswordtxt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
}
#endif
inline void ST_USER_LOGIN_INFO::set_chpasswordtxt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chpasswordtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
}
inline void ST_USER_LOGIN_INFO::set_chpasswordtxt(const void* value, size_t size) {
  
  chpasswordtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
}
inline ::std::string* ST_USER_LOGIN_INFO::mutable_chpasswordtxt() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
  return chpasswordtxt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_USER_LOGIN_INFO::release_chpasswordtxt() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
  
  return chpasswordtxt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_USER_LOGIN_INFO::set_allocated_chpasswordtxt(::std::string* chpasswordtxt) {
  if (chpasswordtxt != NULL) {
    
  } else {
    
  }
  chpasswordtxt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chpasswordtxt);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_USER_LOGIN_INFO.chPasswordTxt)
}

// string chAddressIp = 3;
inline void ST_USER_LOGIN_INFO::clear_chaddressip() {
  chaddressip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_USER_LOGIN_INFO::chaddressip() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
  return chaddressip_.GetNoArena();
}
inline void ST_USER_LOGIN_INFO::set_chaddressip(const ::std::string& value) {
  
  chaddressip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
}
#if LANG_CXX11
inline void ST_USER_LOGIN_INFO::set_chaddressip(::std::string&& value) {
  
  chaddressip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
}
#endif
inline void ST_USER_LOGIN_INFO::set_chaddressip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chaddressip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
}
inline void ST_USER_LOGIN_INFO::set_chaddressip(const char* value, size_t size) {
  
  chaddressip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
}
inline ::std::string* ST_USER_LOGIN_INFO::mutable_chaddressip() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
  return chaddressip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_USER_LOGIN_INFO::release_chaddressip() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
  
  return chaddressip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_USER_LOGIN_INFO::set_allocated_chaddressip(::std::string* chaddressip) {
  if (chaddressip != NULL) {
    
  } else {
    
  }
  chaddressip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaddressip);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_USER_LOGIN_INFO.chAddressIp)
}

// -------------------------------------------------------------------

// ST_SIG_IP_INFO

// uint32 wIpType = 1;
inline void ST_SIG_IP_INFO::clear_wiptype() {
  wiptype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SIG_IP_INFO::wiptype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SIG_IP_INFO.wIpType)
  return wiptype_;
}
inline void ST_SIG_IP_INFO::set_wiptype(::google::protobuf::uint32 value) {
  
  wiptype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SIG_IP_INFO.wIpType)
}

// bytes ucIpAddress = 2;
inline void ST_SIG_IP_INFO::clear_ucipaddress() {
  ucipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SIG_IP_INFO::ucipaddress() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
  return ucipaddress_.GetNoArena();
}
inline void ST_SIG_IP_INFO::set_ucipaddress(const ::std::string& value) {
  
  ucipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
}
#if LANG_CXX11
inline void ST_SIG_IP_INFO::set_ucipaddress(::std::string&& value) {
  
  ucipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
}
#endif
inline void ST_SIG_IP_INFO::set_ucipaddress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
}
inline void ST_SIG_IP_INFO::set_ucipaddress(const void* value, size_t size) {
  
  ucipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
}
inline ::std::string* ST_SIG_IP_INFO::mutable_ucipaddress() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
  return ucipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SIG_IP_INFO::release_ucipaddress() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
  
  return ucipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SIG_IP_INFO::set_allocated_ucipaddress(::std::string* ucipaddress) {
  if (ucipaddress != NULL) {
    
  } else {
    
  }
  ucipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucipaddress);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SIG_IP_INFO.ucIpAddress)
}

// -------------------------------------------------------------------

// ST_SYMBOL_INFO

// uint32 uiSymbolID = 1;
inline void ST_SYMBOL_INFO::clear_uisymbolid() {
  uisymbolid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SYMBOL_INFO::uisymbolid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SYMBOL_INFO.uiSymbolID)
  return uisymbolid_;
}
inline void ST_SYMBOL_INFO::set_uisymbolid(::google::protobuf::uint32 value) {
  
  uisymbolid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SYMBOL_INFO.uiSymbolID)
}

// bytes uiSymbolName = 2;
inline void ST_SYMBOL_INFO::clear_uisymbolname() {
  uisymbolname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SYMBOL_INFO::uisymbolname() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
  return uisymbolname_.GetNoArena();
}
inline void ST_SYMBOL_INFO::set_uisymbolname(const ::std::string& value) {
  
  uisymbolname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
}
#if LANG_CXX11
inline void ST_SYMBOL_INFO::set_uisymbolname(::std::string&& value) {
  
  uisymbolname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
}
#endif
inline void ST_SYMBOL_INFO::set_uisymbolname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uisymbolname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
}
inline void ST_SYMBOL_INFO::set_uisymbolname(const void* value, size_t size) {
  
  uisymbolname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
}
inline ::std::string* ST_SYMBOL_INFO::mutable_uisymbolname() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
  return uisymbolname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SYMBOL_INFO::release_uisymbolname() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
  
  return uisymbolname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SYMBOL_INFO::set_allocated_uisymbolname(::std::string* uisymbolname) {
  if (uisymbolname != NULL) {
    
  } else {
    
  }
  uisymbolname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uisymbolname);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SYMBOL_INFO.uiSymbolName)
}

// -------------------------------------------------------------------

// ST_USER_LOGIN_RESP

// uint32 ucLoginRsp = 1;
inline void ST_USER_LOGIN_RESP::clear_ucloginrsp() {
  ucloginrsp_ = 0u;
}
inline ::google::protobuf::uint32 ST_USER_LOGIN_RESP::ucloginrsp() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.ucLoginRsp)
  return ucloginrsp_;
}
inline void ST_USER_LOGIN_RESP::set_ucloginrsp(::google::protobuf::uint32 value) {
  
  ucloginrsp_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_RESP.ucLoginRsp)
}

// uint32 uiUserID = 2;
inline void ST_USER_LOGIN_RESP::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_USER_LOGIN_RESP::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.uiUserID)
  return uiuserid_;
}
inline void ST_USER_LOGIN_RESP::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_RESP.uiUserID)
}

// uint32 uiIPLisyNum = 3;
inline void ST_USER_LOGIN_RESP::clear_uiiplisynum() {
  uiiplisynum_ = 0u;
}
inline ::google::protobuf::uint32 ST_USER_LOGIN_RESP::uiiplisynum() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.uiIPLisyNum)
  return uiiplisynum_;
}
inline void ST_USER_LOGIN_RESP::set_uiiplisynum(::google::protobuf::uint32 value) {
  
  uiiplisynum_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_RESP.uiIPLisyNum)
}

// repeated .MEProInterface.ST_SIG_IP_INFO stIPInfo = 4;
inline int ST_USER_LOGIN_RESP::stipinfo_size() const {
  return stipinfo_.size();
}
inline void ST_USER_LOGIN_RESP::clear_stipinfo() {
  stipinfo_.Clear();
}
inline ::MEProInterface::ST_SIG_IP_INFO* ST_USER_LOGIN_RESP::mutable_stipinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_RESP.stIPInfo)
  return stipinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_IP_INFO >*
ST_USER_LOGIN_RESP::mutable_stipinfo() {
  // @@protoc_insertion_point(field_mutable_list:MEProInterface.ST_USER_LOGIN_RESP.stIPInfo)
  return &stipinfo_;
}
inline const ::MEProInterface::ST_SIG_IP_INFO& ST_USER_LOGIN_RESP::stipinfo(int index) const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.stIPInfo)
  return stipinfo_.Get(index);
}
inline ::MEProInterface::ST_SIG_IP_INFO* ST_USER_LOGIN_RESP::add_stipinfo() {
  // @@protoc_insertion_point(field_add:MEProInterface.ST_USER_LOGIN_RESP.stIPInfo)
  return stipinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_IP_INFO >&
ST_USER_LOGIN_RESP::stipinfo() const {
  // @@protoc_insertion_point(field_list:MEProInterface.ST_USER_LOGIN_RESP.stIPInfo)
  return stipinfo_;
}

// uint32 uiSymbolNum = 5;
inline void ST_USER_LOGIN_RESP::clear_uisymbolnum() {
  uisymbolnum_ = 0u;
}
inline ::google::protobuf::uint32 ST_USER_LOGIN_RESP::uisymbolnum() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.uiSymbolNum)
  return uisymbolnum_;
}
inline void ST_USER_LOGIN_RESP::set_uisymbolnum(::google::protobuf::uint32 value) {
  
  uisymbolnum_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_RESP.uiSymbolNum)
}

// repeated .MEProInterface.ST_SYMBOL_INFO stSymbolInfo = 6;
inline int ST_USER_LOGIN_RESP::stsymbolinfo_size() const {
  return stsymbolinfo_.size();
}
inline void ST_USER_LOGIN_RESP::clear_stsymbolinfo() {
  stsymbolinfo_.Clear();
}
inline ::MEProInterface::ST_SYMBOL_INFO* ST_USER_LOGIN_RESP::mutable_stsymbolinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_RESP.stSymbolInfo)
  return stsymbolinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SYMBOL_INFO >*
ST_USER_LOGIN_RESP::mutable_stsymbolinfo() {
  // @@protoc_insertion_point(field_mutable_list:MEProInterface.ST_USER_LOGIN_RESP.stSymbolInfo)
  return &stsymbolinfo_;
}
inline const ::MEProInterface::ST_SYMBOL_INFO& ST_USER_LOGIN_RESP::stsymbolinfo(int index) const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.stSymbolInfo)
  return stsymbolinfo_.Get(index);
}
inline ::MEProInterface::ST_SYMBOL_INFO* ST_USER_LOGIN_RESP::add_stsymbolinfo() {
  // @@protoc_insertion_point(field_add:MEProInterface.ST_USER_LOGIN_RESP.stSymbolInfo)
  return stsymbolinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SYMBOL_INFO >&
ST_USER_LOGIN_RESP::stsymbolinfo() const {
  // @@protoc_insertion_point(field_list:MEProInterface.ST_USER_LOGIN_RESP.stSymbolInfo)
  return stsymbolinfo_;
}

// bytes chUserName = 7;
inline void ST_USER_LOGIN_RESP::clear_chusername() {
  chusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_USER_LOGIN_RESP::chusername() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
  return chusername_.GetNoArena();
}
inline void ST_USER_LOGIN_RESP::set_chusername(const ::std::string& value) {
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
}
#if LANG_CXX11
inline void ST_USER_LOGIN_RESP::set_chusername(::std::string&& value) {
  
  chusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
}
#endif
inline void ST_USER_LOGIN_RESP::set_chusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
}
inline void ST_USER_LOGIN_RESP::set_chusername(const void* value, size_t size) {
  
  chusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
}
inline ::std::string* ST_USER_LOGIN_RESP::mutable_chusername() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
  return chusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_USER_LOGIN_RESP::release_chusername() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
  
  return chusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_USER_LOGIN_RESP::set_allocated_chusername(::std::string* chusername) {
  if (chusername != NULL) {
    
  } else {
    
  }
  chusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chusername);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_USER_LOGIN_RESP.chUserName)
}

// -------------------------------------------------------------------

// ST_SUBMIT_ORDER

// string strOrderID = 1;
inline void ST_SUBMIT_ORDER::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER::strorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_ORDER::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
}
#endif
inline void ST_SUBMIT_ORDER::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
}
inline void ST_SUBMIT_ORDER::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
}
inline ::std::string* ST_SUBMIT_ORDER::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SUBMIT_ORDER.strOrderID)
}

// uint64 lSubmitTime = 2;
inline void ST_SUBMIT_ORDER::clear_lsubmittime() {
  lsubmittime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER::lsubmittime() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.lSubmitTime)
  return lsubmittime_;
}
inline void ST_SUBMIT_ORDER::set_lsubmittime(::google::protobuf::uint64 value) {
  
  lsubmittime_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.lSubmitTime)
}

// uint32 ucTransType = 3;
inline void ST_SUBMIT_ORDER::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.ucTransType)
  return uctranstype_;
}
inline void ST_SUBMIT_ORDER::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.ucTransType)
}

// uint32 ucOrderType = 4;
inline void ST_SUBMIT_ORDER::clear_ucordertype() {
  ucordertype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::ucordertype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.ucOrderType)
  return ucordertype_;
}
inline void ST_SUBMIT_ORDER::set_ucordertype(::google::protobuf::uint32 value) {
  
  ucordertype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.ucOrderType)
}

// uint32 uiUserID = 5;
inline void ST_SUBMIT_ORDER::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_ORDER::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.uiUserID)
}

// uint32 uiExchObjID = 6;
inline void ST_SUBMIT_ORDER::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_SUBMIT_ORDER::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.uiExchObjID)
}

// int64 lPrice = 7;
inline void ST_SUBMIT_ORDER::clear_lprice() {
  lprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_ORDER::lprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.lPrice)
  return lprice_;
}
inline void ST_SUBMIT_ORDER::set_lprice(::google::protobuf::int64 value) {
  
  lprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.lPrice)
}

// int64 lNumber = 8;
inline void ST_SUBMIT_ORDER::clear_lnumber() {
  lnumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_ORDER::lnumber() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.lNumber)
  return lnumber_;
}
inline void ST_SUBMIT_ORDER::set_lnumber(::google::protobuf::int64 value) {
  
  lnumber_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.lNumber)
}

// uint32 uiOrderIndex = 9;
inline void ST_SUBMIT_ORDER::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_ORDER::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.uiOrderIndex)
}

// uint64 ucRecordID = 10;
inline void ST_SUBMIT_ORDER::clear_ucrecordid() {
  ucrecordid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER::ucrecordid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER.ucRecordID)
  return ucrecordid_;
}
inline void ST_SUBMIT_ORDER::set_ucrecordid(::google::protobuf::uint64 value) {
  
  ucrecordid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER.ucRecordID)
}

// -------------------------------------------------------------------

// ST_SUBMIT_CAMCEL_ORDER

// string strOrderID = 1;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_CAMCEL_ORDER::strorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
#endif
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
inline ::std::string* ST_SUBMIT_CAMCEL_ORDER::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_CAMCEL_ORDER::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}

// uint64 lOrderIDFrME = 2;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_CAMCEL_ORDER::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.lOrderIDFrME)
}

// uint32 uiOrderIndex = 3;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiOrderIndex)
}

// uint32 uiUserID = 4;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiUserID)
}

// uint32 uiExchObjID = 5;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.uiExchObjID)
}

// uint32 ucTransType = 6;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.ucTransType)
  return uctranstype_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.ucTransType)
}

// int64 lPrice = 7;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_lprice() {
  lprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_CAMCEL_ORDER::lprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.lPrice)
  return lprice_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_lprice(::google::protobuf::int64 value) {
  
  lprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_CAMCEL_ORDER.lPrice)
}

// -------------------------------------------------------------------

// ST_SUBMIT_ORDER_RESP

// string strOrderID = 1;
inline void ST_SUBMIT_ORDER_RESP::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER_RESP::strorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
}
#endif
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
}
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER_RESP::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SUBMIT_ORDER_RESP.strOrderID)
}

// uint32 uiSubmitOrderIype = 2;
inline void ST_SUBMIT_ORDER_RESP::clear_uisubmitorderiype() {
  uisubmitorderiype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uisubmitorderiype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.uiSubmitOrderIype)
  return uisubmitorderiype_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uisubmitorderiype(::google::protobuf::uint32 value) {
  
  uisubmitorderiype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.uiSubmitOrderIype)
}

// uint64 lOrderIDFrME = 3;
inline void ST_SUBMIT_ORDER_RESP::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER_RESP::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_SUBMIT_ORDER_RESP::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.lOrderIDFrME)
}

// uint32 uiOrderIndex = 4;
inline void ST_SUBMIT_ORDER_RESP::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.uiOrderIndex)
}

// uint32 uiOrderStatus = 5;
inline void ST_SUBMIT_ORDER_RESP::clear_uiorderstatus() {
  uiorderstatus_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiorderstatus() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.uiOrderStatus)
  return uiorderstatus_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiorderstatus(::google::protobuf::uint32 value) {
  
  uiorderstatus_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.uiOrderStatus)
}

// string strText = 6;
inline void ST_SUBMIT_ORDER_RESP::clear_strtext() {
  strtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER_RESP::strtext() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
  return strtext_.GetNoArena();
}
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const ::std::string& value) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER_RESP::set_strtext(::std::string&& value) {
  
  strtext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
}
#endif
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
}
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const char* value, size_t size) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::mutable_strtext() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
  return strtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::release_strtext() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
  
  return strtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER_RESP::set_allocated_strtext(::std::string* strtext) {
  if (strtext != NULL) {
    
  } else {
    
  }
  strtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtext);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_SUBMIT_ORDER_RESP.strText)
}

// uint32 uiUserID = 7;
inline void ST_SUBMIT_ORDER_RESP::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.uiUserID)
}

// uint32 ucTransType = 8;
inline void ST_SUBMIT_ORDER_RESP::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SUBMIT_ORDER_RESP.ucTransType)
  return uctranstype_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SUBMIT_ORDER_RESP.ucTransType)
}

// -------------------------------------------------------------------

// ST_TRANS_ORDER_INFO

// string strBidOrderID = 1;
inline void ST_TRANS_ORDER_INFO::clear_strbidorderid() {
  strbidorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_TRANS_ORDER_INFO::strbidorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
  return strbidorderid_.GetNoArena();
}
inline void ST_TRANS_ORDER_INFO::set_strbidorderid(const ::std::string& value) {
  
  strbidorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
}
#if LANG_CXX11
inline void ST_TRANS_ORDER_INFO::set_strbidorderid(::std::string&& value) {
  
  strbidorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
}
#endif
inline void ST_TRANS_ORDER_INFO::set_strbidorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strbidorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
}
inline void ST_TRANS_ORDER_INFO::set_strbidorderid(const char* value, size_t size) {
  
  strbidorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
}
inline ::std::string* ST_TRANS_ORDER_INFO::mutable_strbidorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
  return strbidorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_TRANS_ORDER_INFO::release_strbidorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
  
  return strbidorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_TRANS_ORDER_INFO::set_allocated_strbidorderid(::std::string* strbidorderid) {
  if (strbidorderid != NULL) {
    
  } else {
    
  }
  strbidorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strbidorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_TRANS_ORDER_INFO.strBidOrderID)
}

// string strAskOrderID = 2;
inline void ST_TRANS_ORDER_INFO::clear_straskorderid() {
  straskorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_TRANS_ORDER_INFO::straskorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
  return straskorderid_.GetNoArena();
}
inline void ST_TRANS_ORDER_INFO::set_straskorderid(const ::std::string& value) {
  
  straskorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
}
#if LANG_CXX11
inline void ST_TRANS_ORDER_INFO::set_straskorderid(::std::string&& value) {
  
  straskorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
}
#endif
inline void ST_TRANS_ORDER_INFO::set_straskorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  straskorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
}
inline void ST_TRANS_ORDER_INFO::set_straskorderid(const char* value, size_t size) {
  
  straskorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
}
inline ::std::string* ST_TRANS_ORDER_INFO::mutable_straskorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
  return straskorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_TRANS_ORDER_INFO::release_straskorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
  
  return straskorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_TRANS_ORDER_INFO::set_allocated_straskorderid(::std::string* straskorderid) {
  if (straskorderid != NULL) {
    
  } else {
    
  }
  straskorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), straskorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_TRANS_ORDER_INFO.strAskOrderID)
}

// uint32 uiBidUserID = 3;
inline void ST_TRANS_ORDER_INFO::clear_uibiduserid() {
  uibiduserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_TRANS_ORDER_INFO::uibiduserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.uiBidUserID)
  return uibiduserid_;
}
inline void ST_TRANS_ORDER_INFO::set_uibiduserid(::google::protobuf::uint32 value) {
  
  uibiduserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.uiBidUserID)
}

// uint32 uiAskUserID = 4;
inline void ST_TRANS_ORDER_INFO::clear_uiaskuserid() {
  uiaskuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_TRANS_ORDER_INFO::uiaskuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.uiAskUserID)
  return uiaskuserid_;
}
inline void ST_TRANS_ORDER_INFO::set_uiaskuserid(::google::protobuf::uint32 value) {
  
  uiaskuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.uiAskUserID)
}

// int64 fPrice = 5;
inline void ST_TRANS_ORDER_INFO::clear_fprice() {
  fprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_TRANS_ORDER_INFO::fprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.fPrice)
  return fprice_;
}
inline void ST_TRANS_ORDER_INFO::set_fprice(::google::protobuf::int64 value) {
  
  fprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.fPrice)
}

// int64 fNumber = 6;
inline void ST_TRANS_ORDER_INFO::clear_fnumber() {
  fnumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_TRANS_ORDER_INFO::fnumber() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.fNumber)
  return fnumber_;
}
inline void ST_TRANS_ORDER_INFO::set_fnumber(::google::protobuf::int64 value) {
  
  fnumber_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.fNumber)
}

// uint32 ucExchType = 7;
inline void ST_TRANS_ORDER_INFO::clear_ucexchtype() {
  ucexchtype_ = 0u;
}
inline ::google::protobuf::uint32 ST_TRANS_ORDER_INFO::ucexchtype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.ucExchType)
  return ucexchtype_;
}
inline void ST_TRANS_ORDER_INFO::set_ucexchtype(::google::protobuf::uint32 value) {
  
  ucexchtype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.ucExchType)
}

// uint64 ucRecordID = 8;
inline void ST_TRANS_ORDER_INFO::clear_ucrecordid() {
  ucrecordid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_TRANS_ORDER_INFO::ucrecordid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.ucRecordID)
  return ucrecordid_;
}
inline void ST_TRANS_ORDER_INFO::set_ucrecordid(::google::protobuf::uint64 value) {
  
  ucrecordid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.ucRecordID)
}

// uint32 ucOrderStatus = 9;
inline void ST_TRANS_ORDER_INFO::clear_ucorderstatus() {
  ucorderstatus_ = 0u;
}
inline ::google::protobuf::uint32 ST_TRANS_ORDER_INFO::ucorderstatus() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.ucOrderStatus)
  return ucorderstatus_;
}
inline void ST_TRANS_ORDER_INFO::set_ucorderstatus(::google::protobuf::uint32 value) {
  
  ucorderstatus_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.ucOrderStatus)
}

// uint32 uiExchObjID = 10;
inline void ST_TRANS_ORDER_INFO::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_TRANS_ORDER_INFO::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_TRANS_ORDER_INFO::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.uiExchObjID)
}

// uint64 meBidOrderID = 11;
inline void ST_TRANS_ORDER_INFO::clear_mebidorderid() {
  mebidorderid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_TRANS_ORDER_INFO::mebidorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.meBidOrderID)
  return mebidorderid_;
}
inline void ST_TRANS_ORDER_INFO::set_mebidorderid(::google::protobuf::uint64 value) {
  
  mebidorderid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.meBidOrderID)
}

// uint64 meAskOrderID = 12;
inline void ST_TRANS_ORDER_INFO::clear_measkorderid() {
  measkorderid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_TRANS_ORDER_INFO::measkorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_TRANS_ORDER_INFO.meAskOrderID)
  return measkorderid_;
}
inline void ST_TRANS_ORDER_INFO::set_measkorderid(::google::protobuf::uint64 value) {
  
  measkorderid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_TRANS_ORDER_INFO.meAskOrderID)
}

// -------------------------------------------------------------------

// ST_REP_TRANS_ORDER_REQUEST

// uint32 uiUserID = 1;
inline void ST_REP_TRANS_ORDER_REQUEST::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_REP_TRANS_ORDER_REQUEST::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.uiUserID)
  return uiuserid_;
}
inline void ST_REP_TRANS_ORDER_REQUEST::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.uiUserID)
}

// uint64 ucExchID = 2;
inline void ST_REP_TRANS_ORDER_REQUEST::clear_ucexchid() {
  ucexchid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_REP_TRANS_ORDER_REQUEST::ucexchid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.ucExchID)
  return ucexchid_;
}
inline void ST_REP_TRANS_ORDER_REQUEST::set_ucexchid(::google::protobuf::uint64 value) {
  
  ucexchid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.ucExchID)
}

// uint32 uiExchObjID = 3;
inline void ST_REP_TRANS_ORDER_REQUEST::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_REP_TRANS_ORDER_REQUEST::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_REP_TRANS_ORDER_REQUEST::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_REP_TRANS_ORDER_REQUEST.uiExchObjID)
}

// -------------------------------------------------------------------

// ST_QUERY_ORDER_INFO

// uint32 uiUserID = 1;
inline void ST_QUERY_ORDER_INFO::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_INFO::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_INFO.uiUserID)
  return uiuserid_;
}
inline void ST_QUERY_ORDER_INFO::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_INFO.uiUserID)
}

// string strOrderID = 2;
inline void ST_QUERY_ORDER_INFO::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_QUERY_ORDER_INFO::strorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_QUERY_ORDER_INFO::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
}
#if LANG_CXX11
inline void ST_QUERY_ORDER_INFO::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
}
#endif
inline void ST_QUERY_ORDER_INFO::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
}
inline void ST_QUERY_ORDER_INFO::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
}
inline ::std::string* ST_QUERY_ORDER_INFO::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_QUERY_ORDER_INFO::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_QUERY_ORDER_INFO::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_QUERY_ORDER_INFO.strOrderID)
}

// uint64 lOrderIDFrME = 3;
inline void ST_QUERY_ORDER_INFO::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_QUERY_ORDER_INFO::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_INFO.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_QUERY_ORDER_INFO::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_INFO.lOrderIDFrME)
}

// uint32 uiExchObjID = 4;
inline void ST_QUERY_ORDER_INFO::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_INFO::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_INFO.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_QUERY_ORDER_INFO::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_INFO.uiExchObjID)
}

// -------------------------------------------------------------------

// ST_QUERY_ORDER_RES

// uint32 uiUserID = 1;
inline void ST_QUERY_ORDER_RES::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.uiUserID)
  return uiuserid_;
}
inline void ST_QUERY_ORDER_RES::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.uiUserID)
}

// string strOrderID = 2;
inline void ST_QUERY_ORDER_RES::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_QUERY_ORDER_RES::strorderid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_QUERY_ORDER_RES::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
}
#if LANG_CXX11
inline void ST_QUERY_ORDER_RES::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
}
#endif
inline void ST_QUERY_ORDER_RES::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
}
inline void ST_QUERY_ORDER_RES::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
}
inline ::std::string* ST_QUERY_ORDER_RES::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_QUERY_ORDER_RES::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_QUERY_ORDER_RES::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_QUERY_ORDER_RES.strOrderID)
}

// uint32 uiExchObjID = 3;
inline void ST_QUERY_ORDER_RES::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_QUERY_ORDER_RES::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.uiExchObjID)
}

// uint32 wTransStatus = 4;
inline void ST_QUERY_ORDER_RES::clear_wtransstatus() {
  wtransstatus_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::wtransstatus() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.wTransStatus)
  return wtransstatus_;
}
inline void ST_QUERY_ORDER_RES::set_wtransstatus(::google::protobuf::uint32 value) {
  
  wtransstatus_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.wTransStatus)
}

// uint32 ucTransType = 5;
inline void ST_QUERY_ORDER_RES::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.ucTransType)
  return uctranstype_;
}
inline void ST_QUERY_ORDER_RES::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.ucTransType)
}

// int64 lOrgPrice = 6;
inline void ST_QUERY_ORDER_RES::clear_lorgprice() {
  lorgprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lorgprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.lOrgPrice)
  return lorgprice_;
}
inline void ST_QUERY_ORDER_RES::set_lorgprice(::google::protobuf::int64 value) {
  
  lorgprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.lOrgPrice)
}

// int64 lOrgNumber = 7;
inline void ST_QUERY_ORDER_RES::clear_lorgnumber() {
  lorgnumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lorgnumber() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.lOrgNumber)
  return lorgnumber_;
}
inline void ST_QUERY_ORDER_RES::set_lorgnumber(::google::protobuf::int64 value) {
  
  lorgnumber_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.lOrgNumber)
}

// int64 lAvgTransferPrice = 8;
inline void ST_QUERY_ORDER_RES::clear_lavgtransferprice() {
  lavgtransferprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lavgtransferprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.lAvgTransferPrice)
  return lavgtransferprice_;
}
inline void ST_QUERY_ORDER_RES::set_lavgtransferprice(::google::protobuf::int64 value) {
  
  lavgtransferprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.lAvgTransferPrice)
}

// int64 lAvgTransferNum = 9;
inline void ST_QUERY_ORDER_RES::clear_lavgtransfernum() {
  lavgtransfernum_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lavgtransfernum() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.lAvgTransferNum)
  return lavgtransfernum_;
}
inline void ST_QUERY_ORDER_RES::set_lavgtransfernum(::google::protobuf::int64 value) {
  
  lavgtransfernum_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.lAvgTransferNum)
}

// uint64 lOrderIDFrME = 10;
inline void ST_QUERY_ORDER_RES::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_QUERY_ORDER_RES::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_QUERY_ORDER_RES.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_QUERY_ORDER_RES::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_QUERY_ORDER_RES.lOrderIDFrME)
}

// -------------------------------------------------------------------

// ST_MART_QUOTATION

// uint32 uiUserID = 1;
inline void ST_MART_QUOTATION::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_MART_QUOTATION::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.uiUserID)
  return uiuserid_;
}
inline void ST_MART_QUOTATION::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.uiUserID)
}

// uint32 uiExchObjID = 2;
inline void ST_MART_QUOTATION::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_MART_QUOTATION::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_MART_QUOTATION::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.uiExchObjID)
}

// int64 lCurDealProce = 3;
inline void ST_MART_QUOTATION::clear_lcurdealproce() {
  lcurdealproce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_MART_QUOTATION::lcurdealproce() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.lCurDealProce)
  return lcurdealproce_;
}
inline void ST_MART_QUOTATION::set_lcurdealproce(::google::protobuf::int64 value) {
  
  lcurdealproce_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.lCurDealProce)
}

// int64 lTotalDealProce = 4;
inline void ST_MART_QUOTATION::clear_ltotaldealproce() {
  ltotaldealproce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_MART_QUOTATION::ltotaldealproce() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.lTotalDealProce)
  return ltotaldealproce_;
}
inline void ST_MART_QUOTATION::set_ltotaldealproce(::google::protobuf::int64 value) {
  
  ltotaldealproce_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.lTotalDealProce)
}

// int64 lBeginProce = 5;
inline void ST_MART_QUOTATION::clear_lbeginproce() {
  lbeginproce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_MART_QUOTATION::lbeginproce() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.lBeginProce)
  return lbeginproce_;
}
inline void ST_MART_QUOTATION::set_lbeginproce(::google::protobuf::int64 value) {
  
  lbeginproce_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.lBeginProce)
}

// int64 lHighestProce = 6;
inline void ST_MART_QUOTATION::clear_lhighestproce() {
  lhighestproce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_MART_QUOTATION::lhighestproce() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.lHighestProce)
  return lhighestproce_;
}
inline void ST_MART_QUOTATION::set_lhighestproce(::google::protobuf::int64 value) {
  
  lhighestproce_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.lHighestProce)
}

// int64 lMinimumProce = 7;
inline void ST_MART_QUOTATION::clear_lminimumproce() {
  lminimumproce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_MART_QUOTATION::lminimumproce() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MART_QUOTATION.lMinimumProce)
  return lminimumproce_;
}
inline void ST_MART_QUOTATION::set_lminimumproce(::google::protobuf::int64 value) {
  
  lminimumproce_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MART_QUOTATION.lMinimumProce)
}

// -------------------------------------------------------------------

// ST_SIG_ORDER_INFO

// uint64 lPrice = 1;
inline void ST_SIG_ORDER_INFO::clear_lprice() {
  lprice_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SIG_ORDER_INFO::lprice() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SIG_ORDER_INFO.lPrice)
  return lprice_;
}
inline void ST_SIG_ORDER_INFO::set_lprice(::google::protobuf::uint64 value) {
  
  lprice_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SIG_ORDER_INFO.lPrice)
}

// uint64 lNumber = 2;
inline void ST_SIG_ORDER_INFO::clear_lnumber() {
  lnumber_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SIG_ORDER_INFO::lnumber() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_SIG_ORDER_INFO.lNumber)
  return lnumber_;
}
inline void ST_SIG_ORDER_INFO::set_lnumber(::google::protobuf::uint64 value) {
  
  lnumber_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_SIG_ORDER_INFO.lNumber)
}

// -------------------------------------------------------------------

// ST_MARKET_ORDERBOOK

// uint32 uiUserID = 1;
inline void ST_MARKET_ORDERBOOK::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_MARKET_ORDERBOOK::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.uiUserID)
  return uiuserid_;
}
inline void ST_MARKET_ORDERBOOK::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MARKET_ORDERBOOK.uiUserID)
}

// uint32 uiExchObjID = 2;
inline void ST_MARKET_ORDERBOOK::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_MARKET_ORDERBOOK::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_MARKET_ORDERBOOK::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MARKET_ORDERBOOK.uiExchObjID)
}

// uint32 uiBidOrderNum = 3;
inline void ST_MARKET_ORDERBOOK::clear_uibidordernum() {
  uibidordernum_ = 0u;
}
inline ::google::protobuf::uint32 ST_MARKET_ORDERBOOK::uibidordernum() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.uiBidOrderNum)
  return uibidordernum_;
}
inline void ST_MARKET_ORDERBOOK::set_uibidordernum(::google::protobuf::uint32 value) {
  
  uibidordernum_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MARKET_ORDERBOOK.uiBidOrderNum)
}

// repeated .MEProInterface.ST_SIG_ORDER_INFO stBidOrder = 4;
inline int ST_MARKET_ORDERBOOK::stbidorder_size() const {
  return stbidorder_.size();
}
inline void ST_MARKET_ORDERBOOK::clear_stbidorder() {
  stbidorder_.Clear();
}
inline ::MEProInterface::ST_SIG_ORDER_INFO* ST_MARKET_ORDERBOOK::mutable_stbidorder(int index) {
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_MARKET_ORDERBOOK.stBidOrder)
  return stbidorder_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >*
ST_MARKET_ORDERBOOK::mutable_stbidorder() {
  // @@protoc_insertion_point(field_mutable_list:MEProInterface.ST_MARKET_ORDERBOOK.stBidOrder)
  return &stbidorder_;
}
inline const ::MEProInterface::ST_SIG_ORDER_INFO& ST_MARKET_ORDERBOOK::stbidorder(int index) const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.stBidOrder)
  return stbidorder_.Get(index);
}
inline ::MEProInterface::ST_SIG_ORDER_INFO* ST_MARKET_ORDERBOOK::add_stbidorder() {
  // @@protoc_insertion_point(field_add:MEProInterface.ST_MARKET_ORDERBOOK.stBidOrder)
  return stbidorder_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >&
ST_MARKET_ORDERBOOK::stbidorder() const {
  // @@protoc_insertion_point(field_list:MEProInterface.ST_MARKET_ORDERBOOK.stBidOrder)
  return stbidorder_;
}

// uint32 uiAskOrderNum = 5;
inline void ST_MARKET_ORDERBOOK::clear_uiaskordernum() {
  uiaskordernum_ = 0u;
}
inline ::google::protobuf::uint32 ST_MARKET_ORDERBOOK::uiaskordernum() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.uiAskOrderNum)
  return uiaskordernum_;
}
inline void ST_MARKET_ORDERBOOK::set_uiaskordernum(::google::protobuf::uint32 value) {
  
  uiaskordernum_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MARKET_ORDERBOOK.uiAskOrderNum)
}

// repeated .MEProInterface.ST_SIG_ORDER_INFO stAskOrder = 6;
inline int ST_MARKET_ORDERBOOK::staskorder_size() const {
  return staskorder_.size();
}
inline void ST_MARKET_ORDERBOOK::clear_staskorder() {
  staskorder_.Clear();
}
inline ::MEProInterface::ST_SIG_ORDER_INFO* ST_MARKET_ORDERBOOK::mutable_staskorder(int index) {
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_MARKET_ORDERBOOK.stAskOrder)
  return staskorder_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >*
ST_MARKET_ORDERBOOK::mutable_staskorder() {
  // @@protoc_insertion_point(field_mutable_list:MEProInterface.ST_MARKET_ORDERBOOK.stAskOrder)
  return &staskorder_;
}
inline const ::MEProInterface::ST_SIG_ORDER_INFO& ST_MARKET_ORDERBOOK::staskorder(int index) const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MARKET_ORDERBOOK.stAskOrder)
  return staskorder_.Get(index);
}
inline ::MEProInterface::ST_SIG_ORDER_INFO* ST_MARKET_ORDERBOOK::add_staskorder() {
  // @@protoc_insertion_point(field_add:MEProInterface.ST_MARKET_ORDERBOOK.stAskOrder)
  return staskorder_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MEProInterface::ST_SIG_ORDER_INFO >&
ST_MARKET_ORDERBOOK::staskorder() const {
  // @@protoc_insertion_point(field_list:MEProInterface.ST_MARKET_ORDERBOOK.stAskOrder)
  return staskorder_;
}

// -------------------------------------------------------------------

// ST_MAINTAIN_LOG

// string strHostName = 1;
inline void ST_MAINTAIN_LOG::clear_strhostname() {
  strhostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_MAINTAIN_LOG::strhostname() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MAINTAIN_LOG.strHostName)
  return strhostname_.GetNoArena();
}
inline void ST_MAINTAIN_LOG::set_strhostname(const ::std::string& value) {
  
  strhostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MAINTAIN_LOG.strHostName)
}
#if LANG_CXX11
inline void ST_MAINTAIN_LOG::set_strhostname(::std::string&& value) {
  
  strhostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_MAINTAIN_LOG.strHostName)
}
#endif
inline void ST_MAINTAIN_LOG::set_strhostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strhostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_MAINTAIN_LOG.strHostName)
}
inline void ST_MAINTAIN_LOG::set_strhostname(const char* value, size_t size) {
  
  strhostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_MAINTAIN_LOG.strHostName)
}
inline ::std::string* ST_MAINTAIN_LOG::mutable_strhostname() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_MAINTAIN_LOG.strHostName)
  return strhostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_MAINTAIN_LOG::release_strhostname() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_MAINTAIN_LOG.strHostName)
  
  return strhostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_MAINTAIN_LOG::set_allocated_strhostname(::std::string* strhostname) {
  if (strhostname != NULL) {
    
  } else {
    
  }
  strhostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strhostname);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_MAINTAIN_LOG.strHostName)
}

// uint32 chLogLevel = 2;
inline void ST_MAINTAIN_LOG::clear_chloglevel() {
  chloglevel_ = 0u;
}
inline ::google::protobuf::uint32 ST_MAINTAIN_LOG::chloglevel() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MAINTAIN_LOG.chLogLevel)
  return chloglevel_;
}
inline void ST_MAINTAIN_LOG::set_chloglevel(::google::protobuf::uint32 value) {
  
  chloglevel_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MAINTAIN_LOG.chLogLevel)
}

// uint32 chModuleIndex = 3;
inline void ST_MAINTAIN_LOG::clear_chmoduleindex() {
  chmoduleindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_MAINTAIN_LOG::chmoduleindex() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MAINTAIN_LOG.chModuleIndex)
  return chmoduleindex_;
}
inline void ST_MAINTAIN_LOG::set_chmoduleindex(::google::protobuf::uint32 value) {
  
  chmoduleindex_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MAINTAIN_LOG.chModuleIndex)
}

// uint64 uiRepTime = 4;
inline void ST_MAINTAIN_LOG::clear_uireptime() {
  uireptime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_MAINTAIN_LOG::uireptime() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MAINTAIN_LOG.uiRepTime)
  return uireptime_;
}
inline void ST_MAINTAIN_LOG::set_uireptime(::google::protobuf::uint64 value) {
  
  uireptime_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MAINTAIN_LOG.uiRepTime)
}

// string strLogContent = 5;
inline void ST_MAINTAIN_LOG::clear_strlogcontent() {
  strlogcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_MAINTAIN_LOG::strlogcontent() const {
  // @@protoc_insertion_point(field_get:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
  return strlogcontent_.GetNoArena();
}
inline void ST_MAINTAIN_LOG::set_strlogcontent(const ::std::string& value) {
  
  strlogcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
}
#if LANG_CXX11
inline void ST_MAINTAIN_LOG::set_strlogcontent(::std::string&& value) {
  
  strlogcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
}
#endif
inline void ST_MAINTAIN_LOG::set_strlogcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strlogcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
}
inline void ST_MAINTAIN_LOG::set_strlogcontent(const char* value, size_t size) {
  
  strlogcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
}
inline ::std::string* ST_MAINTAIN_LOG::mutable_strlogcontent() {
  
  // @@protoc_insertion_point(field_mutable:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
  return strlogcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_MAINTAIN_LOG::release_strlogcontent() {
  // @@protoc_insertion_point(field_release:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
  
  return strlogcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_MAINTAIN_LOG::set_allocated_strlogcontent(::std::string* strlogcontent) {
  if (strlogcontent != NULL) {
    
  } else {
    
  }
  strlogcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlogcontent);
  // @@protoc_insertion_point(field_set_allocated:MEProInterface.ST_MAINTAIN_LOG.strLogContent)
}

// -------------------------------------------------------------------

// IntervalMsgHeader

// int32 iFlowNumber = 1;
inline void IntervalMsgHeader::clear_iflownumber() {
  iflownumber_ = 0;
}
inline ::google::protobuf::int32 IntervalMsgHeader::iflownumber() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.iFlowNumber)
  return iflownumber_;
}
inline void IntervalMsgHeader::set_iflownumber(::google::protobuf::int32 value) {
  
  iflownumber_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.IntervalMsgHeader.iFlowNumber)
}

// int32 iCmd = 2;
inline void IntervalMsgHeader::clear_icmd() {
  icmd_ = 0;
}
inline ::google::protobuf::int32 IntervalMsgHeader::icmd() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.iCmd)
  return icmd_;
}
inline void IntervalMsgHeader::set_icmd(::google::protobuf::int32 value) {
  
  icmd_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.IntervalMsgHeader.iCmd)
}

// int32 iMsgType = 3;
inline void IntervalMsgHeader::clear_imsgtype() {
  imsgtype_ = 0;
}
inline ::google::protobuf::int32 IntervalMsgHeader::imsgtype() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.iMsgType)
  return imsgtype_;
}
inline void IntervalMsgHeader::set_imsgtype(::google::protobuf::int32 value) {
  
  imsgtype_ = value;
  // @@protoc_insertion_point(field_set:MEProInterface.IntervalMsgHeader.iMsgType)
}

// .MEProInterface.ST_USER_LOGIN_INFO stUserLogin = 4;
inline bool IntervalMsgHeader::has_stuserlogin() const {
  return MsgBody_case() == kStUserLogin;
}
inline void IntervalMsgHeader::set_has_stuserlogin() {
  _oneof_case_[0] = kStUserLogin;
}
inline void IntervalMsgHeader::clear_stuserlogin() {
  if (has_stuserlogin()) {
    delete MsgBody_.stuserlogin_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_USER_LOGIN_INFO* IntervalMsgHeader::release_stuserlogin() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stUserLogin)
  if (has_stuserlogin()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_USER_LOGIN_INFO* temp = MsgBody_.stuserlogin_;
    MsgBody_.stuserlogin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_USER_LOGIN_INFO& IntervalMsgHeader::stuserlogin() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stUserLogin)
  return has_stuserlogin()
      ? *MsgBody_.stuserlogin_
      : *reinterpret_cast< ::MEProInterface::ST_USER_LOGIN_INFO*>(&::MEProInterface::_ST_USER_LOGIN_INFO_default_instance_);
}
inline ::MEProInterface::ST_USER_LOGIN_INFO* IntervalMsgHeader::mutable_stuserlogin() {
  if (!has_stuserlogin()) {
    clear_MsgBody();
    set_has_stuserlogin();
    MsgBody_.stuserlogin_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_USER_LOGIN_INFO >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stUserLogin)
  return MsgBody_.stuserlogin_;
}

// .MEProInterface.ST_USER_LOGIN_RESP stLoginResp = 5;
inline bool IntervalMsgHeader::has_stloginresp() const {
  return MsgBody_case() == kStLoginResp;
}
inline void IntervalMsgHeader::set_has_stloginresp() {
  _oneof_case_[0] = kStLoginResp;
}
inline void IntervalMsgHeader::clear_stloginresp() {
  if (has_stloginresp()) {
    delete MsgBody_.stloginresp_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_USER_LOGIN_RESP* IntervalMsgHeader::release_stloginresp() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stLoginResp)
  if (has_stloginresp()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_USER_LOGIN_RESP* temp = MsgBody_.stloginresp_;
    MsgBody_.stloginresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_USER_LOGIN_RESP& IntervalMsgHeader::stloginresp() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stLoginResp)
  return has_stloginresp()
      ? *MsgBody_.stloginresp_
      : *reinterpret_cast< ::MEProInterface::ST_USER_LOGIN_RESP*>(&::MEProInterface::_ST_USER_LOGIN_RESP_default_instance_);
}
inline ::MEProInterface::ST_USER_LOGIN_RESP* IntervalMsgHeader::mutable_stloginresp() {
  if (!has_stloginresp()) {
    clear_MsgBody();
    set_has_stloginresp();
    MsgBody_.stloginresp_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_USER_LOGIN_RESP >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stLoginResp)
  return MsgBody_.stloginresp_;
}

// .MEProInterface.ST_SUBMIT_ORDER stSubmitOrder = 6;
inline bool IntervalMsgHeader::has_stsubmitorder() const {
  return MsgBody_case() == kStSubmitOrder;
}
inline void IntervalMsgHeader::set_has_stsubmitorder() {
  _oneof_case_[0] = kStSubmitOrder;
}
inline void IntervalMsgHeader::clear_stsubmitorder() {
  if (has_stsubmitorder()) {
    delete MsgBody_.stsubmitorder_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_SUBMIT_ORDER* IntervalMsgHeader::release_stsubmitorder() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stSubmitOrder)
  if (has_stsubmitorder()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_SUBMIT_ORDER* temp = MsgBody_.stsubmitorder_;
    MsgBody_.stsubmitorder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_SUBMIT_ORDER& IntervalMsgHeader::stsubmitorder() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stSubmitOrder)
  return has_stsubmitorder()
      ? *MsgBody_.stsubmitorder_
      : *reinterpret_cast< ::MEProInterface::ST_SUBMIT_ORDER*>(&::MEProInterface::_ST_SUBMIT_ORDER_default_instance_);
}
inline ::MEProInterface::ST_SUBMIT_ORDER* IntervalMsgHeader::mutable_stsubmitorder() {
  if (!has_stsubmitorder()) {
    clear_MsgBody();
    set_has_stsubmitorder();
    MsgBody_.stsubmitorder_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_SUBMIT_ORDER >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stSubmitOrder)
  return MsgBody_.stsubmitorder_;
}

// .MEProInterface.ST_SUBMIT_CAMCEL_ORDER stCancelOrder = 7;
inline bool IntervalMsgHeader::has_stcancelorder() const {
  return MsgBody_case() == kStCancelOrder;
}
inline void IntervalMsgHeader::set_has_stcancelorder() {
  _oneof_case_[0] = kStCancelOrder;
}
inline void IntervalMsgHeader::clear_stcancelorder() {
  if (has_stcancelorder()) {
    delete MsgBody_.stcancelorder_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* IntervalMsgHeader::release_stcancelorder() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stCancelOrder)
  if (has_stcancelorder()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* temp = MsgBody_.stcancelorder_;
    MsgBody_.stcancelorder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER& IntervalMsgHeader::stcancelorder() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stCancelOrder)
  return has_stcancelorder()
      ? *MsgBody_.stcancelorder_
      : *reinterpret_cast< ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER*>(&::MEProInterface::_ST_SUBMIT_CAMCEL_ORDER_default_instance_);
}
inline ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER* IntervalMsgHeader::mutable_stcancelorder() {
  if (!has_stcancelorder()) {
    clear_MsgBody();
    set_has_stcancelorder();
    MsgBody_.stcancelorder_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_SUBMIT_CAMCEL_ORDER >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stCancelOrder)
  return MsgBody_.stcancelorder_;
}

// .MEProInterface.ST_SUBMIT_ORDER_RESP stOrderResp = 8;
inline bool IntervalMsgHeader::has_storderresp() const {
  return MsgBody_case() == kStOrderResp;
}
inline void IntervalMsgHeader::set_has_storderresp() {
  _oneof_case_[0] = kStOrderResp;
}
inline void IntervalMsgHeader::clear_storderresp() {
  if (has_storderresp()) {
    delete MsgBody_.storderresp_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_SUBMIT_ORDER_RESP* IntervalMsgHeader::release_storderresp() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stOrderResp)
  if (has_storderresp()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_SUBMIT_ORDER_RESP* temp = MsgBody_.storderresp_;
    MsgBody_.storderresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_SUBMIT_ORDER_RESP& IntervalMsgHeader::storderresp() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stOrderResp)
  return has_storderresp()
      ? *MsgBody_.storderresp_
      : *reinterpret_cast< ::MEProInterface::ST_SUBMIT_ORDER_RESP*>(&::MEProInterface::_ST_SUBMIT_ORDER_RESP_default_instance_);
}
inline ::MEProInterface::ST_SUBMIT_ORDER_RESP* IntervalMsgHeader::mutable_storderresp() {
  if (!has_storderresp()) {
    clear_MsgBody();
    set_has_storderresp();
    MsgBody_.storderresp_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_SUBMIT_ORDER_RESP >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stOrderResp)
  return MsgBody_.storderresp_;
}

// .MEProInterface.ST_QUERY_ORDER_INFO stQueryOrder = 9;
inline bool IntervalMsgHeader::has_stqueryorder() const {
  return MsgBody_case() == kStQueryOrder;
}
inline void IntervalMsgHeader::set_has_stqueryorder() {
  _oneof_case_[0] = kStQueryOrder;
}
inline void IntervalMsgHeader::clear_stqueryorder() {
  if (has_stqueryorder()) {
    delete MsgBody_.stqueryorder_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_QUERY_ORDER_INFO* IntervalMsgHeader::release_stqueryorder() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stQueryOrder)
  if (has_stqueryorder()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_QUERY_ORDER_INFO* temp = MsgBody_.stqueryorder_;
    MsgBody_.stqueryorder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_QUERY_ORDER_INFO& IntervalMsgHeader::stqueryorder() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stQueryOrder)
  return has_stqueryorder()
      ? *MsgBody_.stqueryorder_
      : *reinterpret_cast< ::MEProInterface::ST_QUERY_ORDER_INFO*>(&::MEProInterface::_ST_QUERY_ORDER_INFO_default_instance_);
}
inline ::MEProInterface::ST_QUERY_ORDER_INFO* IntervalMsgHeader::mutable_stqueryorder() {
  if (!has_stqueryorder()) {
    clear_MsgBody();
    set_has_stqueryorder();
    MsgBody_.stqueryorder_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_QUERY_ORDER_INFO >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stQueryOrder)
  return MsgBody_.stqueryorder_;
}

// .MEProInterface.ST_QUERY_ORDER_RES stQueryResp = 10;
inline bool IntervalMsgHeader::has_stqueryresp() const {
  return MsgBody_case() == kStQueryResp;
}
inline void IntervalMsgHeader::set_has_stqueryresp() {
  _oneof_case_[0] = kStQueryResp;
}
inline void IntervalMsgHeader::clear_stqueryresp() {
  if (has_stqueryresp()) {
    delete MsgBody_.stqueryresp_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_QUERY_ORDER_RES* IntervalMsgHeader::release_stqueryresp() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stQueryResp)
  if (has_stqueryresp()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_QUERY_ORDER_RES* temp = MsgBody_.stqueryresp_;
    MsgBody_.stqueryresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_QUERY_ORDER_RES& IntervalMsgHeader::stqueryresp() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stQueryResp)
  return has_stqueryresp()
      ? *MsgBody_.stqueryresp_
      : *reinterpret_cast< ::MEProInterface::ST_QUERY_ORDER_RES*>(&::MEProInterface::_ST_QUERY_ORDER_RES_default_instance_);
}
inline ::MEProInterface::ST_QUERY_ORDER_RES* IntervalMsgHeader::mutable_stqueryresp() {
  if (!has_stqueryresp()) {
    clear_MsgBody();
    set_has_stqueryresp();
    MsgBody_.stqueryresp_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_QUERY_ORDER_RES >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stQueryResp)
  return MsgBody_.stqueryresp_;
}

// .MEProInterface.ST_TRANS_ORDER_INFO stTransOrder = 11;
inline bool IntervalMsgHeader::has_sttransorder() const {
  return MsgBody_case() == kStTransOrder;
}
inline void IntervalMsgHeader::set_has_sttransorder() {
  _oneof_case_[0] = kStTransOrder;
}
inline void IntervalMsgHeader::clear_sttransorder() {
  if (has_sttransorder()) {
    delete MsgBody_.sttransorder_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_TRANS_ORDER_INFO* IntervalMsgHeader::release_sttransorder() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stTransOrder)
  if (has_sttransorder()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_TRANS_ORDER_INFO* temp = MsgBody_.sttransorder_;
    MsgBody_.sttransorder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_TRANS_ORDER_INFO& IntervalMsgHeader::sttransorder() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stTransOrder)
  return has_sttransorder()
      ? *MsgBody_.sttransorder_
      : *reinterpret_cast< ::MEProInterface::ST_TRANS_ORDER_INFO*>(&::MEProInterface::_ST_TRANS_ORDER_INFO_default_instance_);
}
inline ::MEProInterface::ST_TRANS_ORDER_INFO* IntervalMsgHeader::mutable_sttransorder() {
  if (!has_sttransorder()) {
    clear_MsgBody();
    set_has_sttransorder();
    MsgBody_.sttransorder_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_TRANS_ORDER_INFO >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stTransOrder)
  return MsgBody_.sttransorder_;
}

// .MEProInterface.ST_MART_QUOTATION stMarketData = 12;
inline bool IntervalMsgHeader::has_stmarketdata() const {
  return MsgBody_case() == kStMarketData;
}
inline void IntervalMsgHeader::set_has_stmarketdata() {
  _oneof_case_[0] = kStMarketData;
}
inline void IntervalMsgHeader::clear_stmarketdata() {
  if (has_stmarketdata()) {
    delete MsgBody_.stmarketdata_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_MART_QUOTATION* IntervalMsgHeader::release_stmarketdata() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stMarketData)
  if (has_stmarketdata()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_MART_QUOTATION* temp = MsgBody_.stmarketdata_;
    MsgBody_.stmarketdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_MART_QUOTATION& IntervalMsgHeader::stmarketdata() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stMarketData)
  return has_stmarketdata()
      ? *MsgBody_.stmarketdata_
      : *reinterpret_cast< ::MEProInterface::ST_MART_QUOTATION*>(&::MEProInterface::_ST_MART_QUOTATION_default_instance_);
}
inline ::MEProInterface::ST_MART_QUOTATION* IntervalMsgHeader::mutable_stmarketdata() {
  if (!has_stmarketdata()) {
    clear_MsgBody();
    set_has_stmarketdata();
    MsgBody_.stmarketdata_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_MART_QUOTATION >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stMarketData)
  return MsgBody_.stmarketdata_;
}

// .MEProInterface.ST_REP_TRANS_ORDER_REQUEST stReptransReq = 13;
inline bool IntervalMsgHeader::has_streptransreq() const {
  return MsgBody_case() == kStReptransReq;
}
inline void IntervalMsgHeader::set_has_streptransreq() {
  _oneof_case_[0] = kStReptransReq;
}
inline void IntervalMsgHeader::clear_streptransreq() {
  if (has_streptransreq()) {
    delete MsgBody_.streptransreq_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* IntervalMsgHeader::release_streptransreq() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stReptransReq)
  if (has_streptransreq()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* temp = MsgBody_.streptransreq_;
    MsgBody_.streptransreq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST& IntervalMsgHeader::streptransreq() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stReptransReq)
  return has_streptransreq()
      ? *MsgBody_.streptransreq_
      : *reinterpret_cast< ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST*>(&::MEProInterface::_ST_REP_TRANS_ORDER_REQUEST_default_instance_);
}
inline ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST* IntervalMsgHeader::mutable_streptransreq() {
  if (!has_streptransreq()) {
    clear_MsgBody();
    set_has_streptransreq();
    MsgBody_.streptransreq_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_REP_TRANS_ORDER_REQUEST >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stReptransReq)
  return MsgBody_.streptransreq_;
}

// .MEProInterface.ST_USER_LOGIN_INFO stSubcriUserLogin = 14;
inline bool IntervalMsgHeader::has_stsubcriuserlogin() const {
  return MsgBody_case() == kStSubcriUserLogin;
}
inline void IntervalMsgHeader::set_has_stsubcriuserlogin() {
  _oneof_case_[0] = kStSubcriUserLogin;
}
inline void IntervalMsgHeader::clear_stsubcriuserlogin() {
  if (has_stsubcriuserlogin()) {
    delete MsgBody_.stsubcriuserlogin_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_USER_LOGIN_INFO* IntervalMsgHeader::release_stsubcriuserlogin() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stSubcriUserLogin)
  if (has_stsubcriuserlogin()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_USER_LOGIN_INFO* temp = MsgBody_.stsubcriuserlogin_;
    MsgBody_.stsubcriuserlogin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_USER_LOGIN_INFO& IntervalMsgHeader::stsubcriuserlogin() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stSubcriUserLogin)
  return has_stsubcriuserlogin()
      ? *MsgBody_.stsubcriuserlogin_
      : *reinterpret_cast< ::MEProInterface::ST_USER_LOGIN_INFO*>(&::MEProInterface::_ST_USER_LOGIN_INFO_default_instance_);
}
inline ::MEProInterface::ST_USER_LOGIN_INFO* IntervalMsgHeader::mutable_stsubcriuserlogin() {
  if (!has_stsubcriuserlogin()) {
    clear_MsgBody();
    set_has_stsubcriuserlogin();
    MsgBody_.stsubcriuserlogin_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_USER_LOGIN_INFO >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stSubcriUserLogin)
  return MsgBody_.stsubcriuserlogin_;
}

// .MEProInterface.ST_QUERY_ORDER_INFO stQueryHistoryOrder = 15;
inline bool IntervalMsgHeader::has_stqueryhistoryorder() const {
  return MsgBody_case() == kStQueryHistoryOrder;
}
inline void IntervalMsgHeader::set_has_stqueryhistoryorder() {
  _oneof_case_[0] = kStQueryHistoryOrder;
}
inline void IntervalMsgHeader::clear_stqueryhistoryorder() {
  if (has_stqueryhistoryorder()) {
    delete MsgBody_.stqueryhistoryorder_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_QUERY_ORDER_INFO* IntervalMsgHeader::release_stqueryhistoryorder() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stQueryHistoryOrder)
  if (has_stqueryhistoryorder()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_QUERY_ORDER_INFO* temp = MsgBody_.stqueryhistoryorder_;
    MsgBody_.stqueryhistoryorder_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_QUERY_ORDER_INFO& IntervalMsgHeader::stqueryhistoryorder() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stQueryHistoryOrder)
  return has_stqueryhistoryorder()
      ? *MsgBody_.stqueryhistoryorder_
      : *reinterpret_cast< ::MEProInterface::ST_QUERY_ORDER_INFO*>(&::MEProInterface::_ST_QUERY_ORDER_INFO_default_instance_);
}
inline ::MEProInterface::ST_QUERY_ORDER_INFO* IntervalMsgHeader::mutable_stqueryhistoryorder() {
  if (!has_stqueryhistoryorder()) {
    clear_MsgBody();
    set_has_stqueryhistoryorder();
    MsgBody_.stqueryhistoryorder_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_QUERY_ORDER_INFO >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stQueryHistoryOrder)
  return MsgBody_.stqueryhistoryorder_;
}

// .MEProInterface.ST_MARKET_ORDERBOOK stMarketOrderBook = 16;
inline bool IntervalMsgHeader::has_stmarketorderbook() const {
  return MsgBody_case() == kStMarketOrderBook;
}
inline void IntervalMsgHeader::set_has_stmarketorderbook() {
  _oneof_case_[0] = kStMarketOrderBook;
}
inline void IntervalMsgHeader::clear_stmarketorderbook() {
  if (has_stmarketorderbook()) {
    delete MsgBody_.stmarketorderbook_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_MARKET_ORDERBOOK* IntervalMsgHeader::release_stmarketorderbook() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stMarketOrderBook)
  if (has_stmarketorderbook()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_MARKET_ORDERBOOK* temp = MsgBody_.stmarketorderbook_;
    MsgBody_.stmarketorderbook_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_MARKET_ORDERBOOK& IntervalMsgHeader::stmarketorderbook() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stMarketOrderBook)
  return has_stmarketorderbook()
      ? *MsgBody_.stmarketorderbook_
      : *reinterpret_cast< ::MEProInterface::ST_MARKET_ORDERBOOK*>(&::MEProInterface::_ST_MARKET_ORDERBOOK_default_instance_);
}
inline ::MEProInterface::ST_MARKET_ORDERBOOK* IntervalMsgHeader::mutable_stmarketorderbook() {
  if (!has_stmarketorderbook()) {
    clear_MsgBody();
    set_has_stmarketorderbook();
    MsgBody_.stmarketorderbook_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_MARKET_ORDERBOOK >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stMarketOrderBook)
  return MsgBody_.stmarketorderbook_;
}

// .MEProInterface.ST_MAINTAIN_LOG stMaintainLog = 17;
inline bool IntervalMsgHeader::has_stmaintainlog() const {
  return MsgBody_case() == kStMaintainLog;
}
inline void IntervalMsgHeader::set_has_stmaintainlog() {
  _oneof_case_[0] = kStMaintainLog;
}
inline void IntervalMsgHeader::clear_stmaintainlog() {
  if (has_stmaintainlog()) {
    delete MsgBody_.stmaintainlog_;
    clear_has_MsgBody();
  }
}
inline ::MEProInterface::ST_MAINTAIN_LOG* IntervalMsgHeader::release_stmaintainlog() {
  // @@protoc_insertion_point(field_release:MEProInterface.IntervalMsgHeader.stMaintainLog)
  if (has_stmaintainlog()) {
    clear_has_MsgBody();
      ::MEProInterface::ST_MAINTAIN_LOG* temp = MsgBody_.stmaintainlog_;
    MsgBody_.stmaintainlog_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::MEProInterface::ST_MAINTAIN_LOG& IntervalMsgHeader::stmaintainlog() const {
  // @@protoc_insertion_point(field_get:MEProInterface.IntervalMsgHeader.stMaintainLog)
  return has_stmaintainlog()
      ? *MsgBody_.stmaintainlog_
      : *reinterpret_cast< ::MEProInterface::ST_MAINTAIN_LOG*>(&::MEProInterface::_ST_MAINTAIN_LOG_default_instance_);
}
inline ::MEProInterface::ST_MAINTAIN_LOG* IntervalMsgHeader::mutable_stmaintainlog() {
  if (!has_stmaintainlog()) {
    clear_MsgBody();
    set_has_stmaintainlog();
    MsgBody_.stmaintainlog_ = ::google::protobuf::Arena::Create< ::MEProInterface::ST_MAINTAIN_LOG >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:MEProInterface.IntervalMsgHeader.stMaintainLog)
  return MsgBody_.stmaintainlog_;
}

inline bool IntervalMsgHeader::has_MsgBody() const {
  return MsgBody_case() != MSGBODY_NOT_SET;
}
inline void IntervalMsgHeader::clear_has_MsgBody() {
  _oneof_case_[0] = MSGBODY_NOT_SET;
}
inline IntervalMsgHeader::MsgBodyCase IntervalMsgHeader::MsgBody_case() const {
  return IntervalMsgHeader::MsgBodyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MEProInterface

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OrderIntervalMsg_2eproto_INCLUDED
