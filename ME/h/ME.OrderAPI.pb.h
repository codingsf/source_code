// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ME.OrderAPI.proto

#ifndef PROTOBUF_ME_2eOrderAPI_2eproto__INCLUDED
#define PROTOBUF_ME_2eOrderAPI_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ME_2eOrderAPI_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsST_SUBMIT_ORDERImpl();
void InitDefaultsST_SUBMIT_ORDER();
void InitDefaultsST_SUBMIT_CAMCEL_ORDERImpl();
void InitDefaultsST_SUBMIT_CAMCEL_ORDER();
void InitDefaultsST_SUBMIT_ORDER_RESPImpl();
void InitDefaultsST_SUBMIT_ORDER_RESP();
void InitDefaultsST_QUERY_ORDER_INFOImpl();
void InitDefaultsST_QUERY_ORDER_INFO();
void InitDefaultsST_QUERY_ORDER_RESImpl();
void InitDefaultsST_QUERY_ORDER_RES();
inline void InitDefaults() {
  InitDefaultsST_SUBMIT_ORDER();
  InitDefaultsST_SUBMIT_CAMCEL_ORDER();
  InitDefaultsST_SUBMIT_ORDER_RESP();
  InitDefaultsST_QUERY_ORDER_INFO();
  InitDefaultsST_QUERY_ORDER_RES();
}
}  // namespace protobuf_ME_2eOrderAPI_2eproto
namespace MEOrderAPI {
class ST_QUERY_ORDER_INFO;
class ST_QUERY_ORDER_INFODefaultTypeInternal;
extern ST_QUERY_ORDER_INFODefaultTypeInternal _ST_QUERY_ORDER_INFO_default_instance_;
class ST_QUERY_ORDER_RES;
class ST_QUERY_ORDER_RESDefaultTypeInternal;
extern ST_QUERY_ORDER_RESDefaultTypeInternal _ST_QUERY_ORDER_RES_default_instance_;
class ST_SUBMIT_CAMCEL_ORDER;
class ST_SUBMIT_CAMCEL_ORDERDefaultTypeInternal;
extern ST_SUBMIT_CAMCEL_ORDERDefaultTypeInternal _ST_SUBMIT_CAMCEL_ORDER_default_instance_;
class ST_SUBMIT_ORDER;
class ST_SUBMIT_ORDERDefaultTypeInternal;
extern ST_SUBMIT_ORDERDefaultTypeInternal _ST_SUBMIT_ORDER_default_instance_;
class ST_SUBMIT_ORDER_RESP;
class ST_SUBMIT_ORDER_RESPDefaultTypeInternal;
extern ST_SUBMIT_ORDER_RESPDefaultTypeInternal _ST_SUBMIT_ORDER_RESP_default_instance_;
}  // namespace MEOrderAPI
namespace MEOrderAPI {

// ===================================================================

class ST_SUBMIT_ORDER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEOrderAPI.ST_SUBMIT_ORDER) */ {
 public:
  ST_SUBMIT_ORDER();
  virtual ~ST_SUBMIT_ORDER();

  ST_SUBMIT_ORDER(const ST_SUBMIT_ORDER& from);

  inline ST_SUBMIT_ORDER& operator=(const ST_SUBMIT_ORDER& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_ORDER(ST_SUBMIT_ORDER&& from) noexcept
    : ST_SUBMIT_ORDER() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_ORDER& operator=(ST_SUBMIT_ORDER&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_ORDER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_ORDER* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_ORDER*>(
               &_ST_SUBMIT_ORDER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ST_SUBMIT_ORDER* other);
  friend void swap(ST_SUBMIT_ORDER& a, ST_SUBMIT_ORDER& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_ORDER* New() const PROTOBUF_FINAL { return New(NULL); }

  ST_SUBMIT_ORDER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_ORDER& from);
  void MergeFrom(const ST_SUBMIT_ORDER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_ORDER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint64 lSubmitTime = 2;
  void clear_lsubmittime();
  static const int kLSubmitTimeFieldNumber = 2;
  ::google::protobuf::uint64 lsubmittime() const;
  void set_lsubmittime(::google::protobuf::uint64 value);

  // uint32 ucTransType = 3;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 3;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // uint32 ucOrderType = 4;
  void clear_ucordertype();
  static const int kUcOrderTypeFieldNumber = 4;
  ::google::protobuf::uint32 ucordertype() const;
  void set_ucordertype(::google::protobuf::uint32 value);

  // uint32 uiUserID = 5;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 5;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 6;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 6;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // int64 lPrice = 7;
  void clear_lprice();
  static const int kLPriceFieldNumber = 7;
  ::google::protobuf::int64 lprice() const;
  void set_lprice(::google::protobuf::int64 value);

  // int64 lNumber = 8;
  void clear_lnumber();
  static const int kLNumberFieldNumber = 8;
  ::google::protobuf::int64 lnumber() const;
  void set_lnumber(::google::protobuf::int64 value);

  // uint64 ucRecordID = 10;
  void clear_ucrecordid();
  static const int kUcRecordIDFieldNumber = 10;
  ::google::protobuf::uint64 ucrecordid() const;
  void set_ucrecordid(::google::protobuf::uint64 value);

  // uint32 uiOrderIndex = 9;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 9;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEOrderAPI.ST_SUBMIT_ORDER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint64 lsubmittime_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::uint32 ucordertype_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::int64 lprice_;
  ::google::protobuf::int64 lnumber_;
  ::google::protobuf::uint64 ucrecordid_;
  ::google::protobuf::uint32 uiorderindex_;
  mutable int _cached_size_;
  friend struct ::protobuf_ME_2eOrderAPI_2eproto::TableStruct;
  friend void ::protobuf_ME_2eOrderAPI_2eproto::InitDefaultsST_SUBMIT_ORDERImpl();
};
// -------------------------------------------------------------------

class ST_SUBMIT_CAMCEL_ORDER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER) */ {
 public:
  ST_SUBMIT_CAMCEL_ORDER();
  virtual ~ST_SUBMIT_CAMCEL_ORDER();

  ST_SUBMIT_CAMCEL_ORDER(const ST_SUBMIT_CAMCEL_ORDER& from);

  inline ST_SUBMIT_CAMCEL_ORDER& operator=(const ST_SUBMIT_CAMCEL_ORDER& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_CAMCEL_ORDER(ST_SUBMIT_CAMCEL_ORDER&& from) noexcept
    : ST_SUBMIT_CAMCEL_ORDER() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_CAMCEL_ORDER& operator=(ST_SUBMIT_CAMCEL_ORDER&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_CAMCEL_ORDER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_CAMCEL_ORDER* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_CAMCEL_ORDER*>(
               &_ST_SUBMIT_CAMCEL_ORDER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ST_SUBMIT_CAMCEL_ORDER* other);
  friend void swap(ST_SUBMIT_CAMCEL_ORDER& a, ST_SUBMIT_CAMCEL_ORDER& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_CAMCEL_ORDER* New() const PROTOBUF_FINAL { return New(NULL); }

  ST_SUBMIT_CAMCEL_ORDER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_CAMCEL_ORDER& from);
  void MergeFrom(const ST_SUBMIT_CAMCEL_ORDER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_CAMCEL_ORDER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint64 lOrderIDFrME = 2;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 2;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // uint32 uiOrderIndex = 3;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 3;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // uint32 uiUserID = 4;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 4;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 5;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 5;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint32 ucTransType = 6;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 6;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // int64 lPrice = 7;
  void clear_lprice();
  static const int kLPriceFieldNumber = 7;
  ::google::protobuf::int64 lprice() const;
  void set_lprice(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint64 lorderidfrme_;
  ::google::protobuf::uint32 uiorderindex_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::int64 lprice_;
  mutable int _cached_size_;
  friend struct ::protobuf_ME_2eOrderAPI_2eproto::TableStruct;
  friend void ::protobuf_ME_2eOrderAPI_2eproto::InitDefaultsST_SUBMIT_CAMCEL_ORDERImpl();
};
// -------------------------------------------------------------------

class ST_SUBMIT_ORDER_RESP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEOrderAPI.ST_SUBMIT_ORDER_RESP) */ {
 public:
  ST_SUBMIT_ORDER_RESP();
  virtual ~ST_SUBMIT_ORDER_RESP();

  ST_SUBMIT_ORDER_RESP(const ST_SUBMIT_ORDER_RESP& from);

  inline ST_SUBMIT_ORDER_RESP& operator=(const ST_SUBMIT_ORDER_RESP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_SUBMIT_ORDER_RESP(ST_SUBMIT_ORDER_RESP&& from) noexcept
    : ST_SUBMIT_ORDER_RESP() {
    *this = ::std::move(from);
  }

  inline ST_SUBMIT_ORDER_RESP& operator=(ST_SUBMIT_ORDER_RESP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_SUBMIT_ORDER_RESP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_SUBMIT_ORDER_RESP* internal_default_instance() {
    return reinterpret_cast<const ST_SUBMIT_ORDER_RESP*>(
               &_ST_SUBMIT_ORDER_RESP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ST_SUBMIT_ORDER_RESP* other);
  friend void swap(ST_SUBMIT_ORDER_RESP& a, ST_SUBMIT_ORDER_RESP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_SUBMIT_ORDER_RESP* New() const PROTOBUF_FINAL { return New(NULL); }

  ST_SUBMIT_ORDER_RESP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_SUBMIT_ORDER_RESP& from);
  void MergeFrom(const ST_SUBMIT_ORDER_RESP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_SUBMIT_ORDER_RESP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 1;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 1;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // string strText = 6;
  void clear_strtext();
  static const int kStrTextFieldNumber = 6;
  const ::std::string& strtext() const;
  void set_strtext(const ::std::string& value);
  #if LANG_CXX11
  void set_strtext(::std::string&& value);
  #endif
  void set_strtext(const char* value);
  void set_strtext(const char* value, size_t size);
  ::std::string* mutable_strtext();
  ::std::string* release_strtext();
  void set_allocated_strtext(::std::string* strtext);

  // uint64 lOrderIDFrME = 3;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 3;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // uint32 uiSubmitOrderIype = 2;
  void clear_uisubmitorderiype();
  static const int kUiSubmitOrderIypeFieldNumber = 2;
  ::google::protobuf::uint32 uisubmitorderiype() const;
  void set_uisubmitorderiype(::google::protobuf::uint32 value);

  // uint32 uiOrderIndex = 4;
  void clear_uiorderindex();
  static const int kUiOrderIndexFieldNumber = 4;
  ::google::protobuf::uint32 uiorderindex() const;
  void set_uiorderindex(::google::protobuf::uint32 value);

  // uint32 uiOrderStatus = 5;
  void clear_uiorderstatus();
  static const int kUiOrderStatusFieldNumber = 5;
  ::google::protobuf::uint32 uiorderstatus() const;
  void set_uiorderstatus(::google::protobuf::uint32 value);

  // uint32 uiUserID = 7;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 7;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MEOrderAPI.ST_SUBMIT_ORDER_RESP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::internal::ArenaStringPtr strtext_;
  ::google::protobuf::uint64 lorderidfrme_;
  ::google::protobuf::uint32 uisubmitorderiype_;
  ::google::protobuf::uint32 uiorderindex_;
  ::google::protobuf::uint32 uiorderstatus_;
  ::google::protobuf::uint32 uiuserid_;
  mutable int _cached_size_;
  friend struct ::protobuf_ME_2eOrderAPI_2eproto::TableStruct;
  friend void ::protobuf_ME_2eOrderAPI_2eproto::InitDefaultsST_SUBMIT_ORDER_RESPImpl();
};
// -------------------------------------------------------------------

class ST_QUERY_ORDER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEOrderAPI.ST_QUERY_ORDER_INFO) */ {
 public:
  ST_QUERY_ORDER_INFO();
  virtual ~ST_QUERY_ORDER_INFO();

  ST_QUERY_ORDER_INFO(const ST_QUERY_ORDER_INFO& from);

  inline ST_QUERY_ORDER_INFO& operator=(const ST_QUERY_ORDER_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_QUERY_ORDER_INFO(ST_QUERY_ORDER_INFO&& from) noexcept
    : ST_QUERY_ORDER_INFO() {
    *this = ::std::move(from);
  }

  inline ST_QUERY_ORDER_INFO& operator=(ST_QUERY_ORDER_INFO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_QUERY_ORDER_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_QUERY_ORDER_INFO* internal_default_instance() {
    return reinterpret_cast<const ST_QUERY_ORDER_INFO*>(
               &_ST_QUERY_ORDER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ST_QUERY_ORDER_INFO* other);
  friend void swap(ST_QUERY_ORDER_INFO& a, ST_QUERY_ORDER_INFO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_QUERY_ORDER_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  ST_QUERY_ORDER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_QUERY_ORDER_INFO& from);
  void MergeFrom(const ST_QUERY_ORDER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_QUERY_ORDER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 2;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 4;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 4;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint64 lOrderIDFrME = 3;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 3;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEOrderAPI.ST_QUERY_ORDER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint64 lorderidfrme_;
  mutable int _cached_size_;
  friend struct ::protobuf_ME_2eOrderAPI_2eproto::TableStruct;
  friend void ::protobuf_ME_2eOrderAPI_2eproto::InitDefaultsST_QUERY_ORDER_INFOImpl();
};
// -------------------------------------------------------------------

class ST_QUERY_ORDER_RES : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MEOrderAPI.ST_QUERY_ORDER_RES) */ {
 public:
  ST_QUERY_ORDER_RES();
  virtual ~ST_QUERY_ORDER_RES();

  ST_QUERY_ORDER_RES(const ST_QUERY_ORDER_RES& from);

  inline ST_QUERY_ORDER_RES& operator=(const ST_QUERY_ORDER_RES& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ST_QUERY_ORDER_RES(ST_QUERY_ORDER_RES&& from) noexcept
    : ST_QUERY_ORDER_RES() {
    *this = ::std::move(from);
  }

  inline ST_QUERY_ORDER_RES& operator=(ST_QUERY_ORDER_RES&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ST_QUERY_ORDER_RES& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ST_QUERY_ORDER_RES* internal_default_instance() {
    return reinterpret_cast<const ST_QUERY_ORDER_RES*>(
               &_ST_QUERY_ORDER_RES_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ST_QUERY_ORDER_RES* other);
  friend void swap(ST_QUERY_ORDER_RES& a, ST_QUERY_ORDER_RES& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ST_QUERY_ORDER_RES* New() const PROTOBUF_FINAL { return New(NULL); }

  ST_QUERY_ORDER_RES* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ST_QUERY_ORDER_RES& from);
  void MergeFrom(const ST_QUERY_ORDER_RES& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ST_QUERY_ORDER_RES* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strOrderID = 2;
  void clear_strorderid();
  static const int kStrOrderIDFieldNumber = 2;
  const ::std::string& strorderid() const;
  void set_strorderid(const ::std::string& value);
  #if LANG_CXX11
  void set_strorderid(::std::string&& value);
  #endif
  void set_strorderid(const char* value);
  void set_strorderid(const char* value, size_t size);
  ::std::string* mutable_strorderid();
  ::std::string* release_strorderid();
  void set_allocated_strorderid(::std::string* strorderid);

  // uint32 uiUserID = 1;
  void clear_uiuserid();
  static const int kUiUserIDFieldNumber = 1;
  ::google::protobuf::uint32 uiuserid() const;
  void set_uiuserid(::google::protobuf::uint32 value);

  // uint32 uiExchObjID = 3;
  void clear_uiexchobjid();
  static const int kUiExchObjIDFieldNumber = 3;
  ::google::protobuf::uint32 uiexchobjid() const;
  void set_uiexchobjid(::google::protobuf::uint32 value);

  // uint32 wTransStatus = 4;
  void clear_wtransstatus();
  static const int kWTransStatusFieldNumber = 4;
  ::google::protobuf::uint32 wtransstatus() const;
  void set_wtransstatus(::google::protobuf::uint32 value);

  // uint32 ucTransType = 5;
  void clear_uctranstype();
  static const int kUcTransTypeFieldNumber = 5;
  ::google::protobuf::uint32 uctranstype() const;
  void set_uctranstype(::google::protobuf::uint32 value);

  // int64 lOrgPrice = 6;
  void clear_lorgprice();
  static const int kLOrgPriceFieldNumber = 6;
  ::google::protobuf::int64 lorgprice() const;
  void set_lorgprice(::google::protobuf::int64 value);

  // int64 lOrgNumber = 7;
  void clear_lorgnumber();
  static const int kLOrgNumberFieldNumber = 7;
  ::google::protobuf::int64 lorgnumber() const;
  void set_lorgnumber(::google::protobuf::int64 value);

  // int64 lAvgTransferPrice = 8;
  void clear_lavgtransferprice();
  static const int kLAvgTransferPriceFieldNumber = 8;
  ::google::protobuf::int64 lavgtransferprice() const;
  void set_lavgtransferprice(::google::protobuf::int64 value);

  // int64 lAvgTransferNum = 9;
  void clear_lavgtransfernum();
  static const int kLAvgTransferNumFieldNumber = 9;
  ::google::protobuf::int64 lavgtransfernum() const;
  void set_lavgtransfernum(::google::protobuf::int64 value);

  // uint64 lOrderIDFrME = 10;
  void clear_lorderidfrme();
  static const int kLOrderIDFrMEFieldNumber = 10;
  ::google::protobuf::uint64 lorderidfrme() const;
  void set_lorderidfrme(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MEOrderAPI.ST_QUERY_ORDER_RES)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strorderid_;
  ::google::protobuf::uint32 uiuserid_;
  ::google::protobuf::uint32 uiexchobjid_;
  ::google::protobuf::uint32 wtransstatus_;
  ::google::protobuf::uint32 uctranstype_;
  ::google::protobuf::int64 lorgprice_;
  ::google::protobuf::int64 lorgnumber_;
  ::google::protobuf::int64 lavgtransferprice_;
  ::google::protobuf::int64 lavgtransfernum_;
  ::google::protobuf::uint64 lorderidfrme_;
  mutable int _cached_size_;
  friend struct ::protobuf_ME_2eOrderAPI_2eproto::TableStruct;
  friend void ::protobuf_ME_2eOrderAPI_2eproto::InitDefaultsST_QUERY_ORDER_RESImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ST_SUBMIT_ORDER

// string strOrderID = 1;
inline void ST_SUBMIT_ORDER::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER::strorderid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_ORDER::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
}
#endif
inline void ST_SUBMIT_ORDER::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
}
inline void ST_SUBMIT_ORDER::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
}
inline ::std::string* ST_SUBMIT_ORDER::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_SUBMIT_ORDER.strOrderID)
}

// uint64 lSubmitTime = 2;
inline void ST_SUBMIT_ORDER::clear_lsubmittime() {
  lsubmittime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER::lsubmittime() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.lSubmitTime)
  return lsubmittime_;
}
inline void ST_SUBMIT_ORDER::set_lsubmittime(::google::protobuf::uint64 value) {
  
  lsubmittime_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.lSubmitTime)
}

// uint32 ucTransType = 3;
inline void ST_SUBMIT_ORDER::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.ucTransType)
  return uctranstype_;
}
inline void ST_SUBMIT_ORDER::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.ucTransType)
}

// uint32 ucOrderType = 4;
inline void ST_SUBMIT_ORDER::clear_ucordertype() {
  ucordertype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::ucordertype() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.ucOrderType)
  return ucordertype_;
}
inline void ST_SUBMIT_ORDER::set_ucordertype(::google::protobuf::uint32 value) {
  
  ucordertype_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.ucOrderType)
}

// uint32 uiUserID = 5;
inline void ST_SUBMIT_ORDER::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_ORDER::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.uiUserID)
}

// uint32 uiExchObjID = 6;
inline void ST_SUBMIT_ORDER::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_SUBMIT_ORDER::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.uiExchObjID)
}

// int64 lPrice = 7;
inline void ST_SUBMIT_ORDER::clear_lprice() {
  lprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_ORDER::lprice() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.lPrice)
  return lprice_;
}
inline void ST_SUBMIT_ORDER::set_lprice(::google::protobuf::int64 value) {
  
  lprice_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.lPrice)
}

// int64 lNumber = 8;
inline void ST_SUBMIT_ORDER::clear_lnumber() {
  lnumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_ORDER::lnumber() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.lNumber)
  return lnumber_;
}
inline void ST_SUBMIT_ORDER::set_lnumber(::google::protobuf::int64 value) {
  
  lnumber_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.lNumber)
}

// uint32 uiOrderIndex = 9;
inline void ST_SUBMIT_ORDER::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_ORDER::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.uiOrderIndex)
}

// uint64 ucRecordID = 10;
inline void ST_SUBMIT_ORDER::clear_ucrecordid() {
  ucrecordid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER::ucrecordid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER.ucRecordID)
  return ucrecordid_;
}
inline void ST_SUBMIT_ORDER::set_ucrecordid(::google::protobuf::uint64 value) {
  
  ucrecordid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER.ucRecordID)
}

// -------------------------------------------------------------------

// ST_SUBMIT_CAMCEL_ORDER

// string strOrderID = 1;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_CAMCEL_ORDER::strorderid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
#endif
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}
inline ::std::string* ST_SUBMIT_CAMCEL_ORDER::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_CAMCEL_ORDER::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.strOrderID)
}

// uint64 lOrderIDFrME = 2;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_CAMCEL_ORDER::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.lOrderIDFrME)
}

// uint32 uiOrderIndex = 3;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiOrderIndex)
}

// uint32 uiUserID = 4;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiUserID)
}

// uint32 uiExchObjID = 5;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.uiExchObjID)
}

// uint32 ucTransType = 6;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_CAMCEL_ORDER::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.ucTransType)
  return uctranstype_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.ucTransType)
}

// int64 lPrice = 7;
inline void ST_SUBMIT_CAMCEL_ORDER::clear_lprice() {
  lprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_SUBMIT_CAMCEL_ORDER::lprice() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.lPrice)
  return lprice_;
}
inline void ST_SUBMIT_CAMCEL_ORDER::set_lprice(::google::protobuf::int64 value) {
  
  lprice_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_CAMCEL_ORDER.lPrice)
}

// -------------------------------------------------------------------

// ST_SUBMIT_ORDER_RESP

// string strOrderID = 1;
inline void ST_SUBMIT_ORDER_RESP::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER_RESP::strorderid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
}
#endif
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
}
inline void ST_SUBMIT_ORDER_RESP::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER_RESP::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strOrderID)
}

// uint32 uiSubmitOrderIype = 2;
inline void ST_SUBMIT_ORDER_RESP::clear_uisubmitorderiype() {
  uisubmitorderiype_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uisubmitorderiype() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiSubmitOrderIype)
  return uisubmitorderiype_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uisubmitorderiype(::google::protobuf::uint32 value) {
  
  uisubmitorderiype_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiSubmitOrderIype)
}

// uint64 lOrderIDFrME = 3;
inline void ST_SUBMIT_ORDER_RESP::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_SUBMIT_ORDER_RESP::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_SUBMIT_ORDER_RESP::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.lOrderIDFrME)
}

// uint32 uiOrderIndex = 4;
inline void ST_SUBMIT_ORDER_RESP::clear_uiorderindex() {
  uiorderindex_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiorderindex() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiOrderIndex)
  return uiorderindex_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiorderindex(::google::protobuf::uint32 value) {
  
  uiorderindex_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiOrderIndex)
}

// uint32 uiOrderStatus = 5;
inline void ST_SUBMIT_ORDER_RESP::clear_uiorderstatus() {
  uiorderstatus_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiorderstatus() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiOrderStatus)
  return uiorderstatus_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiorderstatus(::google::protobuf::uint32 value) {
  
  uiorderstatus_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiOrderStatus)
}

// string strText = 6;
inline void ST_SUBMIT_ORDER_RESP::clear_strtext() {
  strtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_SUBMIT_ORDER_RESP::strtext() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
  return strtext_.GetNoArena();
}
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const ::std::string& value) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
}
#if LANG_CXX11
inline void ST_SUBMIT_ORDER_RESP::set_strtext(::std::string&& value) {
  
  strtext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
}
#endif
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
}
inline void ST_SUBMIT_ORDER_RESP::set_strtext(const char* value, size_t size) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::mutable_strtext() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
  return strtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_SUBMIT_ORDER_RESP::release_strtext() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
  
  return strtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_SUBMIT_ORDER_RESP::set_allocated_strtext(::std::string* strtext) {
  if (strtext != NULL) {
    
  } else {
    
  }
  strtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtext);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_SUBMIT_ORDER_RESP.strText)
}

// uint32 uiUserID = 7;
inline void ST_SUBMIT_ORDER_RESP::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_SUBMIT_ORDER_RESP::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiUserID)
  return uiuserid_;
}
inline void ST_SUBMIT_ORDER_RESP::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_SUBMIT_ORDER_RESP.uiUserID)
}

// -------------------------------------------------------------------

// ST_QUERY_ORDER_INFO

// uint32 uiUserID = 1;
inline void ST_QUERY_ORDER_INFO::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_INFO::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_INFO.uiUserID)
  return uiuserid_;
}
inline void ST_QUERY_ORDER_INFO::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_INFO.uiUserID)
}

// string strOrderID = 2;
inline void ST_QUERY_ORDER_INFO::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_QUERY_ORDER_INFO::strorderid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_QUERY_ORDER_INFO::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
}
#if LANG_CXX11
inline void ST_QUERY_ORDER_INFO::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
}
#endif
inline void ST_QUERY_ORDER_INFO::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
}
inline void ST_QUERY_ORDER_INFO::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
}
inline ::std::string* ST_QUERY_ORDER_INFO::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_QUERY_ORDER_INFO::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_QUERY_ORDER_INFO::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_QUERY_ORDER_INFO.strOrderID)
}

// uint64 lOrderIDFrME = 3;
inline void ST_QUERY_ORDER_INFO::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_QUERY_ORDER_INFO::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_INFO.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_QUERY_ORDER_INFO::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_INFO.lOrderIDFrME)
}

// uint32 uiExchObjID = 4;
inline void ST_QUERY_ORDER_INFO::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_INFO::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_INFO.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_QUERY_ORDER_INFO::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_INFO.uiExchObjID)
}

// -------------------------------------------------------------------

// ST_QUERY_ORDER_RES

// uint32 uiUserID = 1;
inline void ST_QUERY_ORDER_RES::clear_uiuserid() {
  uiuserid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uiuserid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.uiUserID)
  return uiuserid_;
}
inline void ST_QUERY_ORDER_RES::set_uiuserid(::google::protobuf::uint32 value) {
  
  uiuserid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.uiUserID)
}

// string strOrderID = 2;
inline void ST_QUERY_ORDER_RES::clear_strorderid() {
  strorderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ST_QUERY_ORDER_RES::strorderid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
  return strorderid_.GetNoArena();
}
inline void ST_QUERY_ORDER_RES::set_strorderid(const ::std::string& value) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
}
#if LANG_CXX11
inline void ST_QUERY_ORDER_RES::set_strorderid(::std::string&& value) {
  
  strorderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
}
#endif
inline void ST_QUERY_ORDER_RES::set_strorderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
}
inline void ST_QUERY_ORDER_RES::set_strorderid(const char* value, size_t size) {
  
  strorderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
}
inline ::std::string* ST_QUERY_ORDER_RES::mutable_strorderid() {
  
  // @@protoc_insertion_point(field_mutable:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
  return strorderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ST_QUERY_ORDER_RES::release_strorderid() {
  // @@protoc_insertion_point(field_release:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
  
  return strorderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ST_QUERY_ORDER_RES::set_allocated_strorderid(::std::string* strorderid) {
  if (strorderid != NULL) {
    
  } else {
    
  }
  strorderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strorderid);
  // @@protoc_insertion_point(field_set_allocated:MEOrderAPI.ST_QUERY_ORDER_RES.strOrderID)
}

// uint32 uiExchObjID = 3;
inline void ST_QUERY_ORDER_RES::clear_uiexchobjid() {
  uiexchobjid_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uiexchobjid() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.uiExchObjID)
  return uiexchobjid_;
}
inline void ST_QUERY_ORDER_RES::set_uiexchobjid(::google::protobuf::uint32 value) {
  
  uiexchobjid_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.uiExchObjID)
}

// uint32 wTransStatus = 4;
inline void ST_QUERY_ORDER_RES::clear_wtransstatus() {
  wtransstatus_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::wtransstatus() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.wTransStatus)
  return wtransstatus_;
}
inline void ST_QUERY_ORDER_RES::set_wtransstatus(::google::protobuf::uint32 value) {
  
  wtransstatus_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.wTransStatus)
}

// uint32 ucTransType = 5;
inline void ST_QUERY_ORDER_RES::clear_uctranstype() {
  uctranstype_ = 0u;
}
inline ::google::protobuf::uint32 ST_QUERY_ORDER_RES::uctranstype() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.ucTransType)
  return uctranstype_;
}
inline void ST_QUERY_ORDER_RES::set_uctranstype(::google::protobuf::uint32 value) {
  
  uctranstype_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.ucTransType)
}

// int64 lOrgPrice = 6;
inline void ST_QUERY_ORDER_RES::clear_lorgprice() {
  lorgprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lorgprice() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.lOrgPrice)
  return lorgprice_;
}
inline void ST_QUERY_ORDER_RES::set_lorgprice(::google::protobuf::int64 value) {
  
  lorgprice_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.lOrgPrice)
}

// int64 lOrgNumber = 7;
inline void ST_QUERY_ORDER_RES::clear_lorgnumber() {
  lorgnumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lorgnumber() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.lOrgNumber)
  return lorgnumber_;
}
inline void ST_QUERY_ORDER_RES::set_lorgnumber(::google::protobuf::int64 value) {
  
  lorgnumber_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.lOrgNumber)
}

// int64 lAvgTransferPrice = 8;
inline void ST_QUERY_ORDER_RES::clear_lavgtransferprice() {
  lavgtransferprice_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lavgtransferprice() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.lAvgTransferPrice)
  return lavgtransferprice_;
}
inline void ST_QUERY_ORDER_RES::set_lavgtransferprice(::google::protobuf::int64 value) {
  
  lavgtransferprice_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.lAvgTransferPrice)
}

// int64 lAvgTransferNum = 9;
inline void ST_QUERY_ORDER_RES::clear_lavgtransfernum() {
  lavgtransfernum_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ST_QUERY_ORDER_RES::lavgtransfernum() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.lAvgTransferNum)
  return lavgtransfernum_;
}
inline void ST_QUERY_ORDER_RES::set_lavgtransfernum(::google::protobuf::int64 value) {
  
  lavgtransfernum_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.lAvgTransferNum)
}

// uint64 lOrderIDFrME = 10;
inline void ST_QUERY_ORDER_RES::clear_lorderidfrme() {
  lorderidfrme_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ST_QUERY_ORDER_RES::lorderidfrme() const {
  // @@protoc_insertion_point(field_get:MEOrderAPI.ST_QUERY_ORDER_RES.lOrderIDFrME)
  return lorderidfrme_;
}
inline void ST_QUERY_ORDER_RES::set_lorderidfrme(::google::protobuf::uint64 value) {
  
  lorderidfrme_ = value;
  // @@protoc_insertion_point(field_set:MEOrderAPI.ST_QUERY_ORDER_RES.lOrderIDFrME)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MEOrderAPI

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ME_2eOrderAPI_2eproto__INCLUDED
